[{"/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/index.tsx":"1","/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/reportWebVitals.ts":"2","/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/App.tsx":"3","/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/Home/index.tsx":"4","/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/Test/index.tsx":"5","/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/ts/components/index.tsx":"6","/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/Home/tabs/Home.tsx":"7","/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/Home/tabs/About.tsx":"8","/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/ts/components/layouts/NavBar.tsx":"9","/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/ts/components/layouts/Jumbotron.tsx":"10","/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/Home/tabs/Install.tsx":"11","/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/Home/containers/feature.tsx":"12","/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/Home/containers/banner.tsx":"13","/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/Home/components/banner/index.tsx":"14","/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/Home/components/feature/index.tsx":"15","/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/Home/components/feature/styles/feature.ts":"16","/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/Home/components/banner/styles/banner.ts":"17"},{"size":501,"mtime":1612047813216,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":1612047813217,"results":"20","hashOfConfig":"19"},{"size":822,"mtime":1616194651874,"results":"21","hashOfConfig":"19"},{"size":135,"mtime":1616194651878,"results":"22","hashOfConfig":"19"},{"size":14640,"mtime":1615656272558,"results":"23","hashOfConfig":"19"},{"size":162,"mtime":1616194651882,"results":"24","hashOfConfig":"19"},{"size":1033,"mtime":1616194651878,"results":"25","hashOfConfig":"19"},{"size":236,"mtime":1612047813215,"results":"26","hashOfConfig":"19"},{"size":800,"mtime":1616194651882,"results":"27","hashOfConfig":"19"},{"size":362,"mtime":1615742445627,"results":"28","hashOfConfig":"19"},{"size":3725,"mtime":1616194651878,"results":"29","hashOfConfig":"19"},{"size":1334,"mtime":1616194651877,"results":"30","hashOfConfig":"19"},{"size":340,"mtime":1616194651877,"results":"31","hashOfConfig":"19"},{"size":616,"mtime":1616194651875,"results":"32","hashOfConfig":"19"},{"size":1335,"mtime":1616194651876,"results":"33","hashOfConfig":"19"},{"size":898,"mtime":1616194651876,"results":"34","hashOfConfig":"19"},{"size":1044,"mtime":1616194651876,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"18iqbjc",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/index.tsx",[],["79","80"],"/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/reportWebVitals.ts",[],"/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/App.tsx",["81"],"/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/Home/index.tsx",[],"/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/Test/index.tsx",["82","83","84","85"],"import React, { FunctionComponent, useEffect, useState } from \"react\";\nimport { Form, Button, Row, Col, Table, Image, DropdownButton, Dropdown } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Chart from \"react-apexcharts\";\n// import EMAGraph from \"../graph/EMA.png\"\n// import TEMAGraph from \"../graph/TEMA.png\"\n// import MACDGraph from \"../graph/MACD.png\"\n// import redarrow from '../image/redarrow.png'\n// import greenarrow from '../image/greenarrow.png'\n\ntype submitDataType = {\n  underlying: string;\n  expMonth: string;\n  methods: string;\n  daterange_from: string;\n  daterange_to: string;\n};\n\ntype ratioDataType = {\n  \"Cumulative Return\": number;\n  \"Annual return\": number;\n  \"Win percentage\": number;\n  \"Win loss ratio\": number | string;\n  \"Volatility\": number;\n  \"Annual volatility\": number;\n  \"Sharpe ratio\": number | string;\n  \"Sortino ratio\": number | string;\n  \"Max drawdown\": number;\n  \"Calmar ratio\": number | string;\n  \"Omega ratio\": number | string;\n  \"Skew\": number;\n  \"Kurtosis\": number;\n  \"Tail ratio\": number;\n  \"VAR\": number;\n};\n\ntype responseDataType = {\n  \"EMA\": ratioDataType;\n  \"TEMA\": ratioDataType;\n  \"MACD\": ratioDataType;\n  \"OHLC\": number[];\n  \"Close\": number[];\n  \"EMA_buy\": number[];\n  \"EMA_sell\": number[];\n  \"TEMA_buy\": number[];\n  \"TEMA_sell\": number[];\n  \"MACD_buy\": number[];\n  \"MACD_sell\": number[];\n};\n\n// Data Type for candlestick\ntype optionsDataType = {\n  chart: chartDataType;\n  title: titleDataType;\n  xaxis: xaxisDataType;\n  yaxis: yaxisDataType;\n  tooltip?: tooltipDataType;\n  markers?: markerDataType;\n  fill?: fillDataType;\n  colors?: string | string[];\n};\n\ntype chartDataType = {\n  id?: string;\n  type?: string;\n  height?: number;\n};\n\ntype titleDataType = {\n  text?: string;\n  align?: string;\n};\n\ntype xaxisDataType = {\n  categories?: number[];\n  type?: string;\n  labels?: labelDataType;\n};\n\ntype labelDataType = {\n  format?: string;\n}\n\ntype yaxisDataType = {\n  tooltip?: tooltipDataType;\n};\n\ntype tooltipDataType = {\n  enabled?: boolean;\n  x?: labelDataType;\n  y?: labelDataType;\n  shared?: boolean;\n  intersect?: boolean;\n};\n\ntype markerDataType = {\n  size: number[];\n  shape?: string;\n  colors?: string[] | string;\n};\n\ntype seriesDataType = {\n  name: string;\n  data: number[] | number[][];\n  type?: string;\n};\n\ntype fillDataType = {\n  type: string | string[];\n  opacity?: number;\n  image?: imageDataType;\n  colors?: string[] | string;\n};\n\ntype imageDataType = {\n  src: string | string[];\n  width?: number;\n  height?: number;\n};\n\n\nconst Test: FunctionComponent<any> = (props) => {\n  const emptyData: submitDataType = {\n    underlying: \"\",\n    expMonth: \"\",\n    methods: \"\",\n    daterange_from: \"\",\n    daterange_to: \"\",\n  };\n\n  const emptyRatio: ratioDataType = {\n    \"Cumulative Return\": 0,\n    \"Annual return\": 0,\n    \"Win percentage\": 0,\n    \"Win loss ratio\": 1,\n    Volatility: 0,\n    \"Annual volatility\": 0,\n    \"Sharpe ratio\": 0,\n    \"Sortino ratio\": 0,\n    \"Max drawdown\": 0,\n    \"Calmar ratio\": 0,\n    \"Omega ratio\": 0,\n    Skew: 0,\n    Kurtosis: 0,\n    \"Tail ratio\": 0,\n    VAR: 0\n  };\n\n  const [validatedForm, setValidatedForm] = useState<boolean>(false);\n  const [monthCheck, setMonthCheck] = useState<boolean>(false);\n  const [formData, setFormData] = useState<submitDataType>(emptyData);\n  const [tableHeader, setTableHeader] = useState<any>(<></>);\n  const [tableRows, setTableRows] = useState<any>(<></>);\n  const [showbutton, setShowButton] = useState<boolean>(true);\n  // const [showGraph, setShowGraph] = useState<boolean>(false);\n  const [showDropdownButton, setShowDropdownButton] = useState<boolean>(false);\n  const [showCandlestick, setShowCandlestick] = useState<boolean>(false);\n  const [showLine, setShowLine] = useState<boolean>(false);\n  const [resData, setResData] = useState<responseDataType>({\n    EMA: emptyRatio,\n    TEMA: emptyRatio,\n    MACD: emptyRatio,\n    \"OHLC\": [],\n    \"Close\": [],\n    \"EMA_buy\": [],\n    \"EMA_sell\": [],\n    \"TEMA_buy\": [],\n    \"TEMA_sell\": [],\n    \"MACD_buy\": [],\n    \"MACD_sell\": []\n  });\n  const [graphType, setGraphType] = useState<string>(\"\");\n  const [dropdownValue, setDropdownValue] = useState<string>(\"EMA\");\n  const [candlestickOptions, setCandlestickOptions] = useState<optionsDataType>({\n    chart: {\n      type: 'candlestick',\n      height: 350\n    },\n    title: {\n      text: 'CandleStick Chart',\n      align: 'left'\n    },\n    xaxis: {\n      type: 'datetime'\n    },\n    tooltip: {\n      x: {\n        format: 'dd MMM yyyy'\n      }\n    },\n    yaxis: {\n      tooltip: {\n        enabled: true\n      }\n    }\n  })\n  const [candlestickSeries, setCandlestickSeries] = useState<seriesDataType[]>(\n    [{\n      name: 'Statistic',\n      data: []\n    }]\n  );\n  const [lineOptions, setLineOptions] = useState<optionsDataType>({\n    chart: {\n      height: 350,\n      type: 'line'\n    },\n    title: {\n      text: 'Trading Record',\n      align: 'left'\n    },\n    xaxis: {\n      type: 'datetime'\n    },\n    tooltip: {\n      x: {\n        format: 'dd MMM yyyy'\n      },\n      shared: false,\n      intersect: true,\n    },\n    yaxis: {\n      tooltip: {\n        enabled: true\n      }\n    },\n    markers: {\n      size: [0,6,6],\n    },\n    fill: {\n      type: 'solid',\n      \n    },\n    colors: ['#267CE3', '#22DB35', '#FF3F00']\n  });\n\n  const [lineSeries, setLineSeries] = useState<seriesDataType[]>(\n    [{\n      name: 'Line',\n      type: \"line\",\n      data: []\n    },{\n      name: 'Buy',\n      type: \"scatter\",\n      data: []\n    },{\n      name: 'Sell',\n      type: \"scatter\",\n      data: []\n    }]\n  );\n\n  const handleSubmit = (e: any) => {\n    const form = e.currentTarget;\n    e.preventDefault();\n    if (form.checkValidity() === false) {\n      e.stopPropagation();\n      setValidatedForm(true);\n      setTimeout(() => {\n        setValidatedForm(false);\n      }, 3000);\n    } else {\n      console.log(formData);\n      axios({\n        method: \"post\",\n        url: \"http://127.0.0.1:5000/result/\",\n        params: formData,\n      })\n        .then((response) => {\n          setShowButton(!showbutton);\n          // setShowGraph(true);\n          setShowDropdownButton(true);\n          setShowCandlestick(true);\n          setShowLine(true);\n          let tempHeader = Object.keys(response.data[dropdownValue]).map((d) => <th>{d}</th>);\n          let tempRows = Object.keys(response.data[dropdownValue]).map((d) => (\n            <td>{response.data[dropdownValue][d]}</td>\n          ));\n          setGraphType(\"EMA\");\n          setResData(response.data);\n          setTableHeader(tempHeader);\n          setTableRows(tempRows);\n          setCandlestickSeries([{\n            name: 'Candlestick',\n            data: response.data['OHLC']\n          }]);\n          setLineSeries([{\n            name: 'Closing Price',\n            type: 'line',\n            data: response.data['Close']\n          }, {\n            name: 'Buy',\n            type: 'scatter',\n            data: response.data[dropdownValue+'_buy']\n          }, {\n            name: 'Sell',\n            type: 'scatter',\n            data: response.data[dropdownValue+'_sell']\n          }]);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  const handleSelect=(e:string | null)=>{\n    console.log(e)\n    var tempHeader;\n    var tempRows;\n    if(e === \"EMA\"){\n      tempHeader = Object.keys(resData['EMA']).map((d) => <th>{d}</th>);\n      tempRows = Object.keys(resData['EMA']).map((d) => (\n        <td>{(resData['EMA'] as any)[d]}</td>\n      ));\n      setGraphType(\"EMA\");\n      setLineSeries([{\n        name: 'Closing Price',\n        type: 'line',\n        data: resData['Close']\n      }, {\n        name: 'Buy',\n        type: 'scatter',\n        data: resData['EMA_buy']\n      }, {\n        name: 'Sell',\n        type: 'scatter',\n        data: resData['EMA_sell']\n      }]);\n      console.log(graphType);\n    }\n    else if(e === \"TEMA\"){\n      tempHeader = Object.keys(resData['TEMA']).map((d) => <th>{d}</th>);\n      tempRows = Object.keys(resData['TEMA']).map((d) => (\n        <td>{(resData['TEMA'] as any)[d]}</td>\n      ));\n      setGraphType(\"TEMA\");\n      setLineSeries([{\n        name: 'Closing Price',\n        type: 'line',\n        data: resData['Close']\n      }, {\n        name: 'Buy',\n        type: 'scatter',\n        data: resData['TEMA_buy']\n      }, {\n        name: 'Sell',\n        type: 'scatter',\n        data: resData['TEMA_sell']\n      }]);\n      console.log(graphType);\n    } else {\n      tempHeader = Object.keys(resData['MACD']).map((d) => <th>{d}</th>);\n      tempRows = Object.keys(resData['MACD']).map((d) => (\n        <td>{(resData['MACD'] as any)[d]}</td>\n      ));\n      setGraphType(\"MACD\");\n      setLineSeries([{\n        name: 'Closing Price',\n        type: 'line',\n        data: resData['Close']\n      }, {\n        name: 'Buy',\n        type: 'scatter',\n        data: resData['MACD_buy']\n      }, {\n        name: 'Sell',\n        type: 'scatter',\n        data: resData['MACD_sell']\n      }]);\n      console.log(graphType);\n    }\n    setTableHeader(tempHeader);\n    setTableRows(tempRows);\n  }\n\n  return (\n    <div>\n      {showbutton ? (\n        <Form noValidate validated={validatedForm} onSubmit={handleSubmit}>\n          <Form.Group controlId=\"underlying\">\n            <Form.Label>Underlying:</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Please enter underlying here\"\n              onChange={(e: any) => {\n                setFormData({ ...formData, underlying: e.target.value });\n              }}\n              value={formData.underlying}\n              required\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Underlying can't be empty.\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"expiremonth\">\n            <Form.Label>Expiration Month:</Form.Label>\n            <Form.Control\n              type=\"number\"\n              placeholder=\"Please enter expiration month here\"\n              required\n              isInvalid={monthCheck}\n              value={formData.expMonth}\n              onChange={(e: any) => {\n                if (e.target.value > 99 || e.target.value === null) {\n                  setMonthCheck(true);\n                } else {\n                  setMonthCheck(false);\n                }\n                setFormData({ ...formData, expMonth: e.target.value });\n              }}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              This field can't be empty. And you must enter no more than 2\n              numbers.\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"methods\">\n            <Form.Label>Select a method:</Form.Label>\n            <Form.Control\n              as=\"select\"\n              placeholder=\"Select a value:\"\n              onChange={(e: any) => {\n                setFormData({ ...formData, methods: e.target.value });\n              }}\n              value={formData.methods}\n              required\n            >\n              <option></option>\n              <option>First Of Month</option>\n              <option>Last Trading Day</option>\n              <Form.Control.Feedback type=\"invalid\">\n                You must select a value.\n              </Form.Control.Feedback>\n            </Form.Control>\n          </Form.Group>\n          <Row>\n            <Col>\n              <Form.Group controlId=\"startdate\">\n                <Form.Label>Select Start Date:</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  placeholder=\"Select start date:\"\n                  onChange={(e: any) => {\n                    setFormData({\n                      ...formData,\n                      daterange_from: e.target.value,\n                    });\n                  }}\n                  value={formData.daterange_from}\n                  required\n                ></Form.Control>\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group controlId=\"enddate\">\n                <Form.Label>Select End Date:</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  placeholder=\"Select end date:\"\n                  onChange={(e: any) => {\n                    setFormData({ ...formData, daterange_to: e.target.value });\n                  }}\n                  value={formData.daterange_to}\n                  required\n                ></Form.Control>\n              </Form.Group>\n            </Col>\n          </Row>\n          <Button type=\"submit\" className=\"btn-block mt-2\">Submit form</Button>\n        </Form>\n      ) : (\n        <></>\n      )}\n      <Button\n        variant=\"outline-primary\"\n        onClick={() => {\n          setShowButton(!showbutton);\n        }}\n        className=\"btn-block p-0 mt-3\"\n      >\n        {showbutton ? \"Hide Input Form\" : \"Show Input Form\"}\n      </Button>\n      { showDropdownButton ? (\n        <DropdownButton \n        id=\"dropdown-basic-button\" \n        title={dropdownValue}\n        onSelect={handleSelect}\n        className=\"mt-4 mb-4\">\n          <Dropdown.Item eventKey=\"EMA\" onClick={() => setDropdownValue(\"EMA\")}>EMA</Dropdown.Item>\n          <Dropdown.Item eventKey=\"TEMA\" onClick={() => setDropdownValue(\"TEMA\")}>TEMA</Dropdown.Item>\n          <Dropdown.Item eventKey=\"MACD\" onClick={() => setDropdownValue(\"MACD\")}>MACD</Dropdown.Item>\n        </DropdownButton>\n      ) : (\n        <></>\n      )}\n\n      <Table striped bordered hover responsive>\n        <thead>\n          <tr>{tableHeader}</tr>\n        </thead>\n        <tbody>\n          <tr>{tableRows}</tr>\n        </tbody>\n      </Table>  \n\n      { showLine ? (\n        <Chart options={lineOptions} series={lineSeries} type=\"line\" width={1100} height={500}/>\n      ) : (\n        <></>\n      )}\n\n      { showCandlestick ? (\n        <Chart options={candlestickOptions} series={candlestickSeries} type=\"candlestick\" width={1100} height={500}/>\n      ) : (\n        <></>\n      )}\n\n      {/* {(function() {\n        if(showGraph) {\n          if (graphType === \"EMA\") {\n            console.log(\"here at ema\");\n            return <Image src={EMAGraph} key={Date.now()} onLoad={() => console.log(\"loaded at ema\")} fluid/>;\n          } else if (graphType === \"TEMA\") {\n            console.log(\"here at tema\");\n            return <Image src={TEMAGraph} key={Date.now()} onLoad={() => console.log(\"loaded at tema\")} fluid/>;\n          } else {\n            console.log(\"here at macd\");\n            return <Image src={MACDGraph} key={Date.now()} onLoad={() => console.log(\"loaded at macd\")}  fluid/>\n          }\n        } else {\n          return <></>;\n        }    \n      })()} */}\n      \n    </div>\n  );\n};\n\nexport default Test;\n","/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/ts/components/index.tsx",[],"/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/Home/tabs/Home.tsx",["86","87"],"import React, { FunctionComponent, useState } from 'react';\nimport Scrollbar from 'react-scrollbars-custom';\n//import { BannerContainer, FaqsContainer, FeatureContainer, FooterContainer, HeaderContainer } from '../containers';\nimport BannerContainer from \"../containers/banner\";\nimport FeatureContainer from \"../containers/feature\"\n\nconst Home : FunctionComponent<any> = () => {\n\tconst [ isHeaderShown, setHeaderShown ] = useState(false);\n\n\tconst handleOnScroll = (scrollTop: number) => {\n\t\tif (scrollTop > 100 && !isHeaderShown) {\n\t\t\tsetHeaderShown(true);\n\t\t} else if (scrollTop <= 100 && isHeaderShown) {\n\t\t\tsetHeaderShown(false);\n\t\t}\n\t};\n\treturn (\n    <div>\n      {/*<Scrollbar noDefaultStyles className=\"main-scrollbar\" onScroll={({ scrollTop }: any) => handleOnScroll(scrollTop)}>*/}\n        {/*<HeaderContainer isHeaderShown={isHeaderShown} />*/}\n        <BannerContainer />\n        <FeatureContainer />\n        {/*<FaqsContainer />\n        <FooterContainer />*/}\n      {/*</Scrollbar>*/}\n    </div>\n\t);\n}\n\nexport default Home;","/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/Home/tabs/About.tsx",["88","89"],"import React,{ FunctionComponent,useEffect, useState} from 'react';\n\nconst About:FunctionComponent<any> = (props) => {\n    return (\n        <div>\n            <h2>This is the About page</h2>\n        </div>\n    );\n}\n\nexport default About;","/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/ts/components/layouts/NavBar.tsx",[],"/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/ts/components/layouts/Jumbotron.tsx",["90"],"import React, { FunctionComponent } from \"react\";\nimport { Jumbotron, Container,Button } from \"react-bootstrap\";\n\nconst TopHeader: FunctionComponent<any> = () => {\n  return (\n    <Jumbotron fluid>\n      <Container>\n        <h1>Welcome to Project Alpha</h1>\n        <p>Backtesting Engine</p>\n      </Container>\n    </Jumbotron>\n  );\n};\n\nexport default TopHeader;\n","/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/Home/tabs/Install.tsx",["91","92","93","94"],"import React,{ FunctionComponent,useEffect, useState} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\n\n\n\nconst Copyright:FunctionComponent<any> = () => {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"/\">\n          STS\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n      marginRight: theme.spacing(2),\n    },\n    heroContent: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(8, 0, 6),\n    },\n    heroButtons: {\n      marginTop: theme.spacing(4),\n    },\n    cardGrid: {\n      paddingTop: theme.spacing(8),\n      paddingBottom: theme.spacing(8),\n    },\n    card: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    cardMedia: {\n      paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n      flexGrow: 1,\n    },\n    cardAction: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    footer: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(6),\n    },\n}));\n\nconst cards = [\"Windows\", \"Mac\", \"Linux\"];\n\nconst Album:FunctionComponent<any> = () => {\n    const classes = useStyles();\n  \n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <main>\n          <Container className={classes.cardGrid} maxWidth=\"md\">\n            {/* End hero unit */}\n            <Grid container spacing={4}>\n              {cards.map((card) => (\n                <Grid item key={card} xs={12} sm={6} md={4}>\n                  <Card className={classes.card}>\n                    <CardMedia\n                      className={classes.cardMedia}\n                      image=\"https://source.unsplash.com/random\"\n                    />\n                    <CardContent className={classes.cardContent}>\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {card}\n                      </Typography>\n                      <Typography>\n                        Click below to download for {card} OS.\n                      </Typography>\n                    </CardContent>\n                    <CardActions className={classes.cardAction}>\n                      <Button size=\"small\" color=\"primary\">\n                        Download\n                      </Button>\n                    </CardActions>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          </Container>\n        </main>\n        {/* Footer */}\n        <footer className={classes.footer}>\n          <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n            Proudly created by STS Fullstack Team\n          </Typography>\n          <Copyright />\n        </footer>\n        {/* End footer */}\n      </React.Fragment>\n    );\n}\n\nconst Install:FunctionComponent<any> = (props) => {\n    return (\n        <div>\n            <Album/>\n        </div>\n    );\n}\nexport default Install;","/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/Home/containers/feature.tsx",["95","96"],"import { FunctionComponent } from 'react';\nimport Feature, { Title } from '../components/feature/index';\nimport logo from '../../image/sts-logo.png';\n\nconst FEATURES = [\n\t{\n\t\tid: 1,\n\t\ttitle: 'Enjoy on your TV.',\n\t\tdescription: 'Watch on smart TVs, PlayStation, Xbox, Chromecast, Apple TV, Blu-ray players and more.',\n\t\tvideo: '',\n\t\timage: logo,\n\t\talt: 'Roseflix on TV'\n\t},\n\t{\n\t\tid: 2,\n\t\ttitle: 'Download your shows to watch offline.',\n\t\tdescription: 'Save your favorites easily and always have something to watch.',\n\t\tvideo: '',\n\t\timage: logo,\n\t\talt: 'Roseflix on mobile',\n\t\tdirection: 'row-reverse'\n\t},\n\t{\n\t\tid: 3,\n\t\ttitle: 'Watch everywhere.',\n\t\tdescription: 'Stream unlimited movies and TV shows on your phone, tablet, laptop and TV without paying more.',\n\t\timage: logo,\n\t\talt: 'Roseflix on different devices'\n\t}\n];\n\nfunction FeatureContainer (){\n\treturn (\n\t\t<Feature.Container>\n\t\t\t{FEATURES.map(({ id, direction = 'row', title, description, image, alt }) => (\n\t\t\t\t<Feature key={id} direction={direction}>\n\t\t\t\t\t<Feature.Panel>\n\t\t\t\t\t\t<Feature.Title>{title}</Feature.Title>\n\t\t\t\t\t\t<Feature.Description>{description}</Feature.Description>\n\t\t\t\t\t</Feature.Panel>\n\t\t\t\t\t<Feature.Panel>\n\t\t\t\t\t\t<Feature.Image src={image} alt={alt} />\n\t\t\t\t\t</Feature.Panel>\n\t\t\t\t</Feature>\n\t\t\t))}\n\t\t</Feature.Container>\n\t);\n}\n\nexport default FeatureContainer;\n","/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/Home/containers/banner.tsx",["97"],"import React, { FunctionComponent } from 'react';\nimport Banner from '../components/banner/index';\n//import SubscribeContainer from './subscribe';\n\nfunction BannerContainer () {\n\treturn (\n\t\t<Banner>\n\t\t\t<Banner.Title>STS</Banner.Title>\n\t\t\t<Banner.SubTitle>Description Here</Banner.SubTitle>\n\t\t</Banner>\n\t);\n}\n\nexport default BannerContainer;","/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/Home/components/banner/index.tsx",[],"/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/Home/components/feature/index.tsx",["98"],"import React, { FunctionComponent } from 'react';\nimport { Container, Item, Inner, Panel, Title, Description, Image } from './styles/feature';\n\ntype FeatureProp = {\n\tchildren: any;\n\tdirection: string;\n\t[x: string]: any;\n};\n\ntype ComponentProp = {\n\tchildren?: any;\n\t[x: string]: any;\n};\n\nfunction Feature ({ children, direction, ...restProps }: FeatureProp){\n\treturn (\n\t\t<Feature.Item {...restProps}>\n\t\t\t<Inner direction={direction}>{children}</Inner>\n\t\t</Feature.Item>\n\t);\n}\n\nFeature.Container = function FeatureContainer({ children, ...restProps }: ComponentProp) {\n\treturn <Container {...restProps}>{children}</Container>;\n};\n\nFeature.Item = function FeatureItem({ children, ...restProps }: ComponentProp) {\n\treturn <Item {...restProps}>{children}</Item>;\n};\n\nFeature.Panel = function FeaturePanel({ children, ...restProps }: ComponentProp) {\n\treturn <Panel {...restProps}>{children}</Panel>;\n};\n\nFeature.Title = function FeatureTitle({ children, ...restProps }: ComponentProp) {\n\treturn <Title {...restProps}>{children}</Title>;\n};\n\nFeature.Description = function FeatureDescription({ children, ...restProps }: ComponentProp) {\n\treturn <Description {...restProps}>{children}</Description>;\n};\n\nFeature.Image = function FeatureImage({ ...restProps }) {\n\treturn <Image {...restProps} />;\n};\n\nexport default Feature;\nexport { Title };\n","/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/Home/components/feature/styles/feature.ts",[],"/Users/andrewhou/Documents/GitHub/Backtesting_Model/client/src/Home/components/banner/styles/banner.ts",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":26},{"ruleId":"103","severity":1,"message":"107","line":1,"column":36,"nodeType":"105","messageId":"106","endLine":1,"endColumn":45},{"ruleId":"103","severity":1,"message":"108","line":2,"column":41,"nodeType":"105","messageId":"106","endLine":2,"endColumn":46},{"ruleId":"103","severity":1,"message":"109","line":174,"column":30,"nodeType":"105","messageId":"106","endLine":174,"endColumn":51},{"ruleId":"103","severity":1,"message":"110","line":203,"column":23,"nodeType":"105","messageId":"106","endLine":203,"endColumn":37},{"ruleId":"103","severity":1,"message":"111","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":17},{"ruleId":"103","severity":1,"message":"112","line":10,"column":8,"nodeType":"105","messageId":"106","endLine":10,"endColumn":22},{"ruleId":"103","severity":1,"message":"107","line":1,"column":34,"nodeType":"105","messageId":"106","endLine":1,"endColumn":43},{"ruleId":"103","severity":1,"message":"113","line":1,"column":45,"nodeType":"105","messageId":"106","endLine":1,"endColumn":53},{"ruleId":"103","severity":1,"message":"114","line":2,"column":31,"nodeType":"105","messageId":"106","endLine":2,"endColumn":37},{"ruleId":"103","severity":1,"message":"107","line":1,"column":34,"nodeType":"105","messageId":"106","endLine":1,"endColumn":43},{"ruleId":"103","severity":1,"message":"113","line":1,"column":45,"nodeType":"105","messageId":"106","endLine":1,"endColumn":53},{"ruleId":"103","severity":1,"message":"115","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":14},{"ruleId":"103","severity":1,"message":"116","line":10,"column":8,"nodeType":"105","messageId":"106","endLine":10,"endColumn":15},{"ruleId":"103","severity":1,"message":"117","line":1,"column":10,"nodeType":"105","messageId":"106","endLine":1,"endColumn":27},{"ruleId":"103","severity":1,"message":"118","line":2,"column":19,"nodeType":"105","messageId":"106","endLine":2,"endColumn":24},{"ruleId":"103","severity":1,"message":"117","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":34},{"ruleId":"103","severity":1,"message":"117","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":34},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"@typescript-eslint/no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Image' is defined but never used.","'setCandlestickOptions' is assigned a value but never used.","'setLineOptions' is assigned a value but never used.","'Scrollbar' is defined but never used.","'handleOnScroll' is assigned a value but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'FunctionComponent' is defined but never used.","'Title' is defined but never used.","no-global-assign","no-unsafe-negation"]