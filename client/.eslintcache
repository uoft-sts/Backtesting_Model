[{"/Users/kev/Documents/GitHub/Backtesting_Model/client/src/index.tsx":"1","/Users/kev/Documents/GitHub/Backtesting_Model/client/src/reportWebVitals.ts":"2","/Users/kev/Documents/GitHub/Backtesting_Model/client/src/App.tsx":"3","/Users/kev/Documents/GitHub/Backtesting_Model/client/src/Home/index.tsx":"4","/Users/kev/Documents/GitHub/Backtesting_Model/client/src/ts/components/index.tsx":"5","/Users/kev/Documents/GitHub/Backtesting_Model/client/src/Test/index.tsx":"6","/Users/kev/Documents/GitHub/Backtesting_Model/client/src/Home/tabs/Home.tsx":"7","/Users/kev/Documents/GitHub/Backtesting_Model/client/src/Home/tabs/About.tsx":"8","/Users/kev/Documents/GitHub/Backtesting_Model/client/src/ts/components/layouts/NavBar.tsx":"9","/Users/kev/Documents/GitHub/Backtesting_Model/client/src/ts/components/layouts/Jumbotron.tsx":"10"},{"size":501,"mtime":1612659919225,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1612659919227,"results":"13","hashOfConfig":"12"},{"size":750,"mtime":1612659919221,"results":"14","hashOfConfig":"12"},{"size":88,"mtime":1612659919222,"results":"15","hashOfConfig":"12"},{"size":126,"mtime":1612659919228,"results":"16","hashOfConfig":"12"},{"size":5737,"mtime":1613968410378,"results":"17","hashOfConfig":"12"},{"size":233,"mtime":1612659919223,"results":"18","hashOfConfig":"12"},{"size":236,"mtime":1612659919223,"results":"19","hashOfConfig":"12"},{"size":700,"mtime":1612659919229,"results":"20","hashOfConfig":"12"},{"size":443,"mtime":1612659919228,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"kns5q9",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kev/Documents/GitHub/Backtesting_Model/client/src/index.tsx",[],["47","48"],"/Users/kev/Documents/GitHub/Backtesting_Model/client/src/reportWebVitals.ts",[],"/Users/kev/Documents/GitHub/Backtesting_Model/client/src/App.tsx",["49"],"import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\nimport { NavigationBar,TopHeader } from \"./ts/components/index\";\n\nimport {Home, About} from \"./Home/index\";\nimport Test from \"./Test/index\";\n\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <NavigationBar/>\n      <TopHeader/>\n      <Container>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/test\" component={Test} />\n            <Route exact path=\"/about\" component={About} />\n          </Switch>\n        </Router>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","/Users/kev/Documents/GitHub/Backtesting_Model/client/src/Home/index.tsx",[],"/Users/kev/Documents/GitHub/Backtesting_Model/client/src/ts/components/index.tsx",[],"/Users/kev/Documents/GitHub/Backtesting_Model/client/src/Test/index.tsx",["50"],"import React, { FunctionComponent, useEffect, useState } from \"react\";\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\nimport axios from \"axios\";\n\ntype submitDataType = {\n  underlying: string;\n  expMonth: string;\n  methods: string;\n  daterange_from: string;\n  daterange_to: string;\n};\n\nconst Test: FunctionComponent<any> = (props) => {\n  const emptyData: submitDataType = {\n    underlying: \"\",\n    expMonth: \"\",\n    methods: \"\",\n    daterange_from: \"\",\n    daterange_to: \"\",\n  };\n\n  const [validatedForm, setValidatedForm] = useState<boolean>(false);\n  const [monthCheck, setMonthCheck] = useState<boolean>(false);\n  const [formData, setFormData] = useState<submitDataType>(emptyData);\n  const [tableHeader, setTableHeader] = useState<any>(<></>);\n  const [tableRows, setTableRows] = useState<any>(<></>);\n  const [showbutton, setShowButton] = useState<boolean>(true);\n\n  const handleSubmit = (e: any) => {\n    const form = e.currentTarget;\n    e.preventDefault();\n    if (form.checkValidity() === false) {\n      e.stopPropagation();\n      setValidatedForm(true);\n      setTimeout(() => {\n        setValidatedForm(false);\n      }, 3000);\n    } else {\n      console.log(formData);\n      axios({\n        method: \"post\",\n        url: \"http://127.0.0.1:5000/result/\",\n        params: formData,\n      })\n        .then((response) => {\n          setShowButton(!showbutton);\n          console.log(response.data);\n          let tempHeader = Object.keys(response.data).map((d) => <th>{d}</th>);\n          let tempRows = Object.keys(response.data).map((d) => (\n            <td>{response.data[d]}</td>\n          ));\n          setTableHeader(tempHeader);\n          setTableRows(tempRows);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n  return (\n    <div>\n      {showbutton ? (\n        <Form noValidate validated={validatedForm} onSubmit={handleSubmit}>\n          <Form.Group controlId=\"underlying\">\n            <Form.Label>Underlying:</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Please enter underlying here\"\n              onChange={(e: any) => {\n                setFormData({ ...formData, underlying: e.target.value });\n              }}\n              value={formData.underlying}\n              required\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Underlying can't be empty.\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"expiremonth\">\n            <Form.Label>Expiration Month:</Form.Label>\n            <Form.Control\n              type=\"number\"\n              placeholder=\"Please enter expiration month here\"\n              required\n              isInvalid={monthCheck}\n              value={formData.expMonth}\n              onChange={(e: any) => {\n                if (e.target.value > 99 || e.target.value === null) {\n                  setMonthCheck(true);\n                } else {\n                  setMonthCheck(false);\n                }\n                setFormData({ ...formData, expMonth: e.target.value });\n              }}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              This field can't be empty. And you must enter no more than 2\n              numbers.\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"methods\">\n            <Form.Label>Select a method:</Form.Label>\n            <Form.Control\n              as=\"select\"\n              placeholder=\"Select a value:\"\n              onChange={(e: any) => {\n                setFormData({ ...formData, methods: e.target.value });\n              }}\n              value={formData.methods}\n              required\n            >\n              <option></option>\n              <option>First Of Month</option>\n              <option>Last Trading Day</option>\n              <Form.Control.Feedback type=\"invalid\">\n                You must select a value.\n              </Form.Control.Feedback>\n            </Form.Control>\n          </Form.Group>\n          <Row>\n            <Col>\n              <Form.Group controlId=\"startdate\">\n                <Form.Label>Select Start Date:</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  placeholder=\"Select start date:\"\n                  onChange={(e: any) => {\n                    setFormData({\n                      ...formData,\n                      daterange_from: e.target.value,\n                    });\n                  }}\n                  value={formData.daterange_from}\n                  required\n                ></Form.Control>\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group controlId=\"enddate\">\n                <Form.Label>Select End Date:</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  placeholder=\"Select end date:\"\n                  onChange={(e: any) => {\n                    setFormData({ ...formData, daterange_to: e.target.value });\n                  }}\n                  value={formData.daterange_to}\n                  required\n                ></Form.Control>\n              </Form.Group>\n            </Col>\n          </Row>\n          <Button type=\"submit\">Submit form</Button>\n        </Form>\n      ) : (\n        <></>\n      )}\n      <Button\n        variant=\"outline-primary\"\n        onClick={() => {\n          setShowButton(!showbutton);\n        }}\n      >\n        {showbutton ? \"Hide Input Form\" : \"Show Input Form\"}\n      </Button>\n      <Table striped bordered hover>\n        <thead>\n          <tr>{tableHeader}</tr>\n        </thead>\n        <tbody>\n          <tr>{tableRows}</tr>\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default Test;\n","/Users/kev/Documents/GitHub/Backtesting_Model/client/src/Home/tabs/Home.tsx",["51","52"],"import React,{ FunctionComponent,useEffect, useState} from 'react';\n\nconst Home:FunctionComponent<any> = (props) => {\n    return (\n        <div>\n            <h2>This is the Home page</h2>\n        </div>\n    );\n}\n\nexport default Home;","/Users/kev/Documents/GitHub/Backtesting_Model/client/src/Home/tabs/About.tsx",["53","54"],"import React,{ FunctionComponent,useEffect, useState} from 'react';\n\nconst About:FunctionComponent<any> = (props) => {\n    return (\n        <div>\n            <h2>This is the About page</h2>\n        </div>\n    );\n}\n\nexport default About;","/Users/kev/Documents/GitHub/Backtesting_Model/client/src/ts/components/layouts/NavBar.tsx",[],"/Users/kev/Documents/GitHub/Backtesting_Model/client/src/ts/components/layouts/Jumbotron.tsx",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":26},{"ruleId":"59","severity":1,"message":"63","line":1,"column":36,"nodeType":"61","messageId":"62","endLine":1,"endColumn":45},{"ruleId":"59","severity":1,"message":"63","line":1,"column":34,"nodeType":"61","messageId":"62","endLine":1,"endColumn":43},{"ruleId":"59","severity":1,"message":"64","line":1,"column":45,"nodeType":"61","messageId":"62","endLine":1,"endColumn":53},{"ruleId":"59","severity":1,"message":"63","line":1,"column":34,"nodeType":"61","messageId":"62","endLine":1,"endColumn":43},{"ruleId":"59","severity":1,"message":"64","line":1,"column":45,"nodeType":"61","messageId":"62","endLine":1,"endColumn":53},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"@typescript-eslint/no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]