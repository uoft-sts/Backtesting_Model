[{"/Users/kev/Documents/GitHub/Backtesting_Model/client/src/index.tsx":"1","/Users/kev/Documents/GitHub/Backtesting_Model/client/src/reportWebVitals.ts":"2","/Users/kev/Documents/GitHub/Backtesting_Model/client/src/App.tsx":"3","/Users/kev/Documents/GitHub/Backtesting_Model/client/src/Home/index.tsx":"4","/Users/kev/Documents/GitHub/Backtesting_Model/client/src/Test/index.tsx":"5","/Users/kev/Documents/GitHub/Backtesting_Model/client/src/Simulation/index.tsx":"6","/Users/kev/Documents/GitHub/Backtesting_Model/client/src/ts/components/index.tsx":"7","/Users/kev/Documents/GitHub/Backtesting_Model/client/src/Home/tabs/Home.tsx":"8","/Users/kev/Documents/GitHub/Backtesting_Model/client/src/Home/tabs/About.tsx":"9","/Users/kev/Documents/GitHub/Backtesting_Model/client/src/ts/components/layouts/NavBar.tsx":"10","/Users/kev/Documents/GitHub/Backtesting_Model/client/src/ts/components/layouts/Jumbotron.tsx":"11","/Users/kev/Documents/GitHub/Backtesting_Model/client/src/Home/tabs/Level2.tsx":"12","/Users/kev/Documents/GitHub/Backtesting_Model/client/src/Home/tabs/TimeNSales.tsx":"13"},{"size":501,"mtime":1612659919225,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":1612659919227,"results":"16","hashOfConfig":"15"},{"size":865,"mtime":1620164287032,"results":"17","hashOfConfig":"15"},{"size":88,"mtime":1620164287032,"results":"18","hashOfConfig":"15"},{"size":14640,"mtime":1619984269562,"results":"19","hashOfConfig":"15"},{"size":7378,"mtime":1620164826771,"results":"20","hashOfConfig":"15"},{"size":126,"mtime":1617420340575,"results":"21","hashOfConfig":"15"},{"size":233,"mtime":1619984269560,"results":"22","hashOfConfig":"15"},{"size":236,"mtime":1612659919223,"results":"23","hashOfConfig":"15"},{"size":806,"mtime":1620163672383,"results":"24","hashOfConfig":"15"},{"size":362,"mtime":1614202984009,"results":"25","hashOfConfig":"15"},{"size":4968,"mtime":1620164672379,"results":"26","hashOfConfig":"15"},{"size":4908,"mtime":1620164813628,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"kns5q9",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"30"},"/Users/kev/Documents/GitHub/Backtesting_Model/client/src/index.tsx",[],["64","65"],"/Users/kev/Documents/GitHub/Backtesting_Model/client/src/reportWebVitals.ts",[],"/Users/kev/Documents/GitHub/Backtesting_Model/client/src/App.tsx",["66"],"import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\nimport { NavigationBar,TopHeader } from \"./ts/components/index\";\n\nimport {Home, About} from \"./Home/index\";\nimport Test from \"./Test/index\";\nimport Simulation from \"./Simulation/index\";\n\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <NavigationBar/>\n      <TopHeader/>\n      <Container>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/test\" component={Test} />\n            <Route exact path=\"/about\" component={About} />\n            <Route exact path=\"/simulation\" component={Simulation} />\n          </Switch>\n        </Router>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","/Users/kev/Documents/GitHub/Backtesting_Model/client/src/Home/index.tsx",[],"/Users/kev/Documents/GitHub/Backtesting_Model/client/src/Test/index.tsx",["67","68","69","70"],"import React, { FunctionComponent, useEffect, useState } from \"react\";\nimport { Form, Button, Row, Col, Table, Image, DropdownButton, Dropdown } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Chart from \"react-apexcharts\";\n// import EMAGraph from \"../graph/EMA.png\"\n// import TEMAGraph from \"../graph/TEMA.png\"\n// import MACDGraph from \"../graph/MACD.png\"\n// import redarrow from '../image/redarrow.png'\n// import greenarrow from '../image/greenarrow.png'\n\ntype submitDataType = {\n  underlying: string;\n  expMonth: string;\n  methods: string;\n  daterange_from: string;\n  daterange_to: string;\n};\n\ntype ratioDataType = {\n  \"Cumulative Return\": number;\n  \"Annual return\": number;\n  \"Win percentage\": number;\n  \"Win loss ratio\": number | string;\n  \"Volatility\": number;\n  \"Annual volatility\": number;\n  \"Sharpe ratio\": number | string;\n  \"Sortino ratio\": number | string;\n  \"Max drawdown\": number;\n  \"Calmar ratio\": number | string;\n  \"Omega ratio\": number | string;\n  \"Skew\": number;\n  \"Kurtosis\": number;\n  \"Tail ratio\": number;\n  \"VAR\": number;\n};\n\ntype responseDataType = {\n  \"EMA\": ratioDataType;\n  \"TEMA\": ratioDataType;\n  \"MACD\": ratioDataType;\n  \"OHLC\": number[];\n  \"Close\": number[];\n  \"EMA_buy\": number[];\n  \"EMA_sell\": number[];\n  \"TEMA_buy\": number[];\n  \"TEMA_sell\": number[];\n  \"MACD_buy\": number[];\n  \"MACD_sell\": number[];\n};\n\n// Data Type for candlestick\ntype optionsDataType = {\n  chart: chartDataType;\n  title: titleDataType;\n  xaxis: xaxisDataType;\n  yaxis: yaxisDataType;\n  tooltip?: tooltipDataType;\n  markers?: markerDataType;\n  fill?: fillDataType;\n  colors?: string | string[];\n};\n\ntype chartDataType = {\n  id?: string;\n  type?: string;\n  height?: number;\n};\n\ntype titleDataType = {\n  text?: string;\n  align?: string;\n};\n\ntype xaxisDataType = {\n  categories?: number[];\n  type?: string;\n  labels?: labelDataType;\n};\n\ntype labelDataType = {\n  format?: string;\n}\n\ntype yaxisDataType = {\n  tooltip?: tooltipDataType;\n};\n\ntype tooltipDataType = {\n  enabled?: boolean;\n  x?: labelDataType;\n  y?: labelDataType;\n  shared?: boolean;\n  intersect?: boolean;\n};\n\ntype markerDataType = {\n  size: number[];\n  shape?: string;\n  colors?: string[] | string;\n};\n\ntype seriesDataType = {\n  name: string;\n  data: number[] | number[][];\n  type?: string;\n};\n\ntype fillDataType = {\n  type: string | string[];\n  opacity?: number;\n  image?: imageDataType;\n  colors?: string[] | string;\n};\n\ntype imageDataType = {\n  src: string | string[];\n  width?: number;\n  height?: number;\n};\n\n\nconst Test: FunctionComponent<any> = (props) => {\n  const emptyData: submitDataType = {\n    underlying: \"\",\n    expMonth: \"\",\n    methods: \"\",\n    daterange_from: \"\",\n    daterange_to: \"\",\n  };\n\n  const emptyRatio: ratioDataType = {\n    \"Cumulative Return\": 0,\n    \"Annual return\": 0,\n    \"Win percentage\": 0,\n    \"Win loss ratio\": 1,\n    Volatility: 0,\n    \"Annual volatility\": 0,\n    \"Sharpe ratio\": 0,\n    \"Sortino ratio\": 0,\n    \"Max drawdown\": 0,\n    \"Calmar ratio\": 0,\n    \"Omega ratio\": 0,\n    Skew: 0,\n    Kurtosis: 0,\n    \"Tail ratio\": 0,\n    VAR: 0\n  };\n\n  const [validatedForm, setValidatedForm] = useState<boolean>(false);\n  const [monthCheck, setMonthCheck] = useState<boolean>(false);\n  const [formData, setFormData] = useState<submitDataType>(emptyData);\n  const [tableHeader, setTableHeader] = useState<any>(<></>);\n  const [tableRows, setTableRows] = useState<any>(<></>);\n  const [showbutton, setShowButton] = useState<boolean>(true);\n  // const [showGraph, setShowGraph] = useState<boolean>(false);\n  const [showDropdownButton, setShowDropdownButton] = useState<boolean>(false);\n  const [showCandlestick, setShowCandlestick] = useState<boolean>(false);\n  const [showLine, setShowLine] = useState<boolean>(false);\n  const [resData, setResData] = useState<responseDataType>({\n    EMA: emptyRatio,\n    TEMA: emptyRatio,\n    MACD: emptyRatio,\n    \"OHLC\": [],\n    \"Close\": [],\n    \"EMA_buy\": [],\n    \"EMA_sell\": [],\n    \"TEMA_buy\": [],\n    \"TEMA_sell\": [],\n    \"MACD_buy\": [],\n    \"MACD_sell\": []\n  });\n  const [graphType, setGraphType] = useState<string>(\"\");\n  const [dropdownValue, setDropdownValue] = useState<string>(\"EMA\");\n  const [candlestickOptions, setCandlestickOptions] = useState<optionsDataType>({\n    chart: {\n      type: 'candlestick',\n      height: 350\n    },\n    title: {\n      text: 'CandleStick Chart',\n      align: 'left'\n    },\n    xaxis: {\n      type: 'datetime'\n    },\n    tooltip: {\n      x: {\n        format: 'dd MMM yyyy'\n      }\n    },\n    yaxis: {\n      tooltip: {\n        enabled: true\n      }\n    }\n  })\n  const [candlestickSeries, setCandlestickSeries] = useState<seriesDataType[]>(\n    [{\n      name: 'Statistic',\n      data: []\n    }]\n  );\n  const [lineOptions, setLineOptions] = useState<optionsDataType>({\n    chart: {\n      height: 350,\n      type: 'line'\n    },\n    title: {\n      text: 'Trading Record',\n      align: 'left'\n    },\n    xaxis: {\n      type: 'datetime'\n    },\n    tooltip: {\n      x: {\n        format: 'dd MMM yyyy'\n      },\n      shared: false,\n      intersect: true,\n    },\n    yaxis: {\n      tooltip: {\n        enabled: true\n      }\n    },\n    markers: {\n      size: [0,6,6],\n    },\n    fill: {\n      type: 'solid',\n      \n    },\n    colors: ['#267CE3', '#22DB35', '#FF3F00']\n  });\n\n  const [lineSeries, setLineSeries] = useState<seriesDataType[]>(\n    [{\n      name: 'Line',\n      type: \"line\",\n      data: []\n    },{\n      name: 'Buy',\n      type: \"scatter\",\n      data: []\n    },{\n      name: 'Sell',\n      type: \"scatter\",\n      data: []\n    }]\n  );\n\n  const handleSubmit = (e: any) => {\n    const form = e.currentTarget;\n    e.preventDefault();\n    if (form.checkValidity() === false) {\n      e.stopPropagation();\n      setValidatedForm(true);\n      setTimeout(() => {\n        setValidatedForm(false);\n      }, 3000);\n    } else {\n      console.log(formData);\n      axios({\n        method: \"post\",\n        url: \"http://127.0.0.1:5000/result/\",\n        params: formData,\n      })\n        .then((response) => {\n          setShowButton(!showbutton);\n          // setShowGraph(true);\n          setShowDropdownButton(true);\n          setShowCandlestick(true);\n          setShowLine(true);\n          let tempHeader = Object.keys(response.data[dropdownValue]).map((d) => <th>{d}</th>);\n          let tempRows = Object.keys(response.data[dropdownValue]).map((d) => (\n            <td>{response.data[dropdownValue][d]}</td>\n          ));\n          setGraphType(\"EMA\");\n          setResData(response.data);\n          setTableHeader(tempHeader);\n          setTableRows(tempRows);\n          setCandlestickSeries([{\n            name: 'Candlestick',\n            data: response.data['OHLC']\n          }]);\n          setLineSeries([{\n            name: 'Closing Price',\n            type: 'line',\n            data: response.data['Close']\n          }, {\n            name: 'Buy',\n            type: 'scatter',\n            data: response.data[dropdownValue+'_buy']\n          }, {\n            name: 'Sell',\n            type: 'scatter',\n            data: response.data[dropdownValue+'_sell']\n          }]);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  const handleSelect=(e:string | null)=>{\n    console.log(e)\n    var tempHeader;\n    var tempRows;\n    if(e === \"EMA\"){\n      tempHeader = Object.keys(resData['EMA']).map((d) => <th>{d}</th>);\n      tempRows = Object.keys(resData['EMA']).map((d) => (\n        <td>{(resData['EMA'] as any)[d]}</td>\n      ));\n      setGraphType(\"EMA\");\n      setLineSeries([{\n        name: 'Closing Price',\n        type: 'line',\n        data: resData['Close']\n      }, {\n        name: 'Buy',\n        type: 'scatter',\n        data: resData['EMA_buy']\n      }, {\n        name: 'Sell',\n        type: 'scatter',\n        data: resData['EMA_sell']\n      }]);\n      console.log(graphType);\n    }\n    else if(e === \"TEMA\"){\n      tempHeader = Object.keys(resData['TEMA']).map((d) => <th>{d}</th>);\n      tempRows = Object.keys(resData['TEMA']).map((d) => (\n        <td>{(resData['TEMA'] as any)[d]}</td>\n      ));\n      setGraphType(\"TEMA\");\n      setLineSeries([{\n        name: 'Closing Price',\n        type: 'line',\n        data: resData['Close']\n      }, {\n        name: 'Buy',\n        type: 'scatter',\n        data: resData['TEMA_buy']\n      }, {\n        name: 'Sell',\n        type: 'scatter',\n        data: resData['TEMA_sell']\n      }]);\n      console.log(graphType);\n    } else {\n      tempHeader = Object.keys(resData['MACD']).map((d) => <th>{d}</th>);\n      tempRows = Object.keys(resData['MACD']).map((d) => (\n        <td>{(resData['MACD'] as any)[d]}</td>\n      ));\n      setGraphType(\"MACD\");\n      setLineSeries([{\n        name: 'Closing Price',\n        type: 'line',\n        data: resData['Close']\n      }, {\n        name: 'Buy',\n        type: 'scatter',\n        data: resData['MACD_buy']\n      }, {\n        name: 'Sell',\n        type: 'scatter',\n        data: resData['MACD_sell']\n      }]);\n      console.log(graphType);\n    }\n    setTableHeader(tempHeader);\n    setTableRows(tempRows);\n  }\n\n  return (\n    <div>\n      {showbutton ? (\n        <Form noValidate validated={validatedForm} onSubmit={handleSubmit}>\n          <Form.Group controlId=\"underlying\">\n            <Form.Label>Underlying:</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Please enter underlying here\"\n              onChange={(e: any) => {\n                setFormData({ ...formData, underlying: e.target.value });\n              }}\n              value={formData.underlying}\n              required\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Underlying can't be empty.\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"expiremonth\">\n            <Form.Label>Expiration Month:</Form.Label>\n            <Form.Control\n              type=\"number\"\n              placeholder=\"Please enter expiration month here\"\n              required\n              isInvalid={monthCheck}\n              value={formData.expMonth}\n              onChange={(e: any) => {\n                if (e.target.value > 99 || e.target.value === null) {\n                  setMonthCheck(true);\n                } else {\n                  setMonthCheck(false);\n                }\n                setFormData({ ...formData, expMonth: e.target.value });\n              }}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              This field can't be empty. And you must enter no more than 2\n              numbers.\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"methods\">\n            <Form.Label>Select a method:</Form.Label>\n            <Form.Control\n              as=\"select\"\n              placeholder=\"Select a value:\"\n              onChange={(e: any) => {\n                setFormData({ ...formData, methods: e.target.value });\n              }}\n              value={formData.methods}\n              required\n            >\n              <option></option>\n              <option>First Of Month</option>\n              <option>Last Trading Day</option>\n              <Form.Control.Feedback type=\"invalid\">\n                You must select a value.\n              </Form.Control.Feedback>\n            </Form.Control>\n          </Form.Group>\n          <Row>\n            <Col>\n              <Form.Group controlId=\"startdate\">\n                <Form.Label>Select Start Date:</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  placeholder=\"Select start date:\"\n                  onChange={(e: any) => {\n                    setFormData({\n                      ...formData,\n                      daterange_from: e.target.value,\n                    });\n                  }}\n                  value={formData.daterange_from}\n                  required\n                ></Form.Control>\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group controlId=\"enddate\">\n                <Form.Label>Select End Date:</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  placeholder=\"Select end date:\"\n                  onChange={(e: any) => {\n                    setFormData({ ...formData, daterange_to: e.target.value });\n                  }}\n                  value={formData.daterange_to}\n                  required\n                ></Form.Control>\n              </Form.Group>\n            </Col>\n          </Row>\n          <Button type=\"submit\" className=\"btn-block mt-2\">Submit form</Button>\n        </Form>\n      ) : (\n        <></>\n      )}\n      <Button\n        variant=\"outline-primary\"\n        onClick={() => {\n          setShowButton(!showbutton);\n        }}\n        className=\"btn-block p-0 mt-3\"\n      >\n        {showbutton ? \"Hide Input Form\" : \"Show Input Form\"}\n      </Button>\n      { showDropdownButton ? (\n        <DropdownButton \n        id=\"dropdown-basic-button\" \n        title={dropdownValue}\n        onSelect={handleSelect}\n        className=\"mt-4 mb-4\">\n          <Dropdown.Item eventKey=\"EMA\" onClick={() => setDropdownValue(\"EMA\")}>EMA</Dropdown.Item>\n          <Dropdown.Item eventKey=\"TEMA\" onClick={() => setDropdownValue(\"TEMA\")}>TEMA</Dropdown.Item>\n          <Dropdown.Item eventKey=\"MACD\" onClick={() => setDropdownValue(\"MACD\")}>MACD</Dropdown.Item>\n        </DropdownButton>\n      ) : (\n        <></>\n      )}\n\n      <Table striped bordered hover responsive>\n        <thead>\n          <tr>{tableHeader}</tr>\n        </thead>\n        <tbody>\n          <tr>{tableRows}</tr>\n        </tbody>\n      </Table>  \n\n      { showLine ? (\n        <Chart options={lineOptions} series={lineSeries} type=\"line\" width={1100} height={500}/>\n      ) : (\n        <></>\n      )}\n\n      { showCandlestick ? (\n        <Chart options={candlestickOptions} series={candlestickSeries} type=\"candlestick\" width={1100} height={500}/>\n      ) : (\n        <></>\n      )}\n\n      {/* {(function() {\n        if(showGraph) {\n          if (graphType === \"EMA\") {\n            console.log(\"here at ema\");\n            return <Image src={EMAGraph} key={Date.now()} onLoad={() => console.log(\"loaded at ema\")} fluid/>;\n          } else if (graphType === \"TEMA\") {\n            console.log(\"here at tema\");\n            return <Image src={TEMAGraph} key={Date.now()} onLoad={() => console.log(\"loaded at tema\")} fluid/>;\n          } else {\n            console.log(\"here at macd\");\n            return <Image src={MACDGraph} key={Date.now()} onLoad={() => console.log(\"loaded at macd\")}  fluid/>\n          }\n        } else {\n          return <></>;\n        }    \n      })()} */}\n      \n    </div>\n  );\n};\n\nexport default Test;\n","/Users/kev/Documents/GitHub/Backtesting_Model/client/src/Simulation/index.tsx",["71","72","73"],"import { FunctionComponent,useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { Container,Row,Col } from 'react-bootstrap';\nimport Level2 from '../Home/tabs/Level2';\nimport TimeNSales from '../Home/tabs/TimeNSales';\n\nconst Simulation:FunctionComponent = () => {\n    \n    let loading = true;\n    let dataIndex = 0;\n    let dataIndexLen= 0;\n    let timeList: number[] = [];\n    let priceList: number[] = [];\n\n    const getData = () => {\n      axios({\n        method: \"get\",\n        url: \"http://127.0.0.1:5000/simulation/\",\n      }).then(response => {\n        const tempData = response.data;\n        console.log(tempData.time);\n        console.log(tempData.price);\n        console.log(tempData.time.length);\n        timeList = tempData.time;\n        priceList = tempData.price;\n        dataIndexLen = tempData.time.length;\n        dataIndex = 0;\n        loading = false;\n      })\n    }\n\n    useEffect(()=>{\n        if(loading){\n            getChart();\n            getData();\n        }\n    },[])\n    \n     const getChart = () => {\n      const LightweightCharts = require('lightweight-charts');\n      const chart = LightweightCharts.createChart(document.body, {\n        width: 1000,\n        height: 300,\n        \n        layout: {\n          backgroundColor: '#000000',\n          textColor: 'rgba(255, 255, 255, 0.9)',\n        },\n        grid: {\n          vertLines: {\n            color: 'rgba(197, 203, 206, 0.5)',\n          },\n          horzLines: {\n            color: 'rgba(197, 203, 206, 0.5)',\n          },\n        },\n        crosshair: {\n          mode: LightweightCharts.CrosshairMode.Normal,\n        },\n        rightPriceScale: {\n          borderColor: 'rgba(197, 203, 206, 0.8)',\n        },\n        timeScale: {\n          timeVisible: true,\n          borderColor: 'rgba(197, 203, 206, 0.8)',\n          rightOffset: 50,\n              barSpacing: 10,\n              fixLeftEdge: true,\n              lockVisibleTimeRangeOnResize: true,\n              rightBarStaysOnScroll: true,\n              borderVisible: true,\n           \n              visible: true,\n      \n              secondsVisible: true,\n        },\n      });\n      \n      const candleSeries = chart.addCandlestickSeries({\n        upColor: 'rgba(255, 144, 0, 1)',\n        downColor: '#000',\n        borderDownColor: 'rgba(255, 144, 0, 1)',\n        borderUpColor: 'rgba(255, 144, 0, 1)',\n        wickDownColor: 'rgba(255, 144, 0, 1)',\n        wickUpColor: 'rgba(255, 144, 0, 1)',\n      });\n\n      const initData = [\n        { time: 1618574549, open: 54.62, high: 55.50, low: 54.52, close: 54.90 },\n        { time: 1618574550, open: 55.08, high: 55.27, low: 54.61, close: 54.98 },\n        { time: 1618574551, open: 56.09, high: 57.47, low: 56.09, close: 57.21 },\n        { time: 1618574552, open: 57.00, high: 58.44, low: 56.41, close: 57.42 },\n        { time: 1618574553, open: 57.46, high: 57.63, low: 56.17, close: 56.43 },\n        { time: 1618574554, open: 56.26, high: 56.62, low: 55.19, close: 55.51 },\n        { time: 1618574555, open: 55.81, high: 57.15, low: 55.72, close: 56.48 },\n        { time: 1618574556, open: 56.92, high: 58.80, low: 56.92, close: 58.18 },\n        { time: 1618574557, open: 58.32, high: 58.32, low: 56.76, close: 57.09 },\n        { time: 1618574558, open: 56.98, high: 57.28, low: 55.55, close: 56.05 },\n        { time: 1618574559, open: 56.34, high: 57.08, low: 55.92, close: 56.63 }\n      ];\n      \n      candleSeries.setData([]);\n\n    // var lastClose = data[data.length - 1].close;\n    // var lastIndex = data.length - 1;\n    \n    // var targetIndex = lastIndex + 105 + Math.round(Math.random() + 30);\n    // var targetPrice = getRandomPrice();\n    \n    // var currentIndex = lastIndex + 1;\n    // var currentBusinessDay = { day: 29, month: 5, year: 2019 };\n    // var ticksInCurrentBar = 0;\n    // var currentBar = {\n    //   open: 0,\n    //   high: 0,\n    //   low: 0,\n    //   close: 0,\n    //   time: currentBusinessDay,\n    // };\n    \n    // function mergeTickToBar(price:number) {\n    //   if (currentBar.open === null) {\n    //     currentBar.open = price;\n    //     currentBar.high = price;\n    //     currentBar.low = price;\n    //     currentBar.close = price;\n    //   } else {\n    //     currentBar.close = price;\n    //     currentBar.high = Math.max(currentBar.high, price);\n    //     currentBar.low = Math.min(currentBar.low, price);\n    //   }\n    //   candleSeries.update(currentBar);\n    // }\n    \n    // function reset() {\n    //   candleSeries.setData(data);\n    //   lastClose = data[data.length - 1].close;\n    //   lastIndex = data.length - 1;\n    \n    //   targetIndex = lastIndex + 5 + Math.round(Math.random() + 30);\n    //   targetPrice = getRandomPrice();\n    \n    //   currentIndex = lastIndex + 1;\n    //   currentBusinessDay = { day: 29, month: 5, year: 2019 };\n    //   ticksInCurrentBar = 0;\n    // }\n    \n    // function getRandomPrice() {\n    //   return 10 + Math.round(Math.random() * 10000) / 100;\n    // }\n    \n    // function nextBusinessDay(time:any) {\n    //   var d = new Date();\n    //   d.setUTCFullYear(time.year);\n    //   d.setUTCMonth(time.month - 1);\n    //   d.setUTCDate(time.day + 1);\n    //   d.setUTCHours(0, 0, 0, 0);\n    //   return {\n    //     year: d.getUTCFullYear(),\n    //     month: d.getUTCMonth() + 1,\n    //     day: d.getUTCDate(),\n    //   };\n    // }\n    \n    setInterval(function() {\n      if(!loading && (dataIndex < dataIndexLen)){\n        console.log(dataIndex);\n        console.log(dataIndexLen);\n        console.log(timeList[dataIndex]);\n        console.log(priceList[dataIndex]);\n        candleSeries.update({ time: timeList[dataIndex], open: priceList[dataIndex], high: priceList[dataIndex], low: priceList[dataIndex], close: priceList[dataIndex]});\n        dataIndex++;\n      }\n      // var deltaY = targetPrice - lastClose;\n      // var deltaX = targetIndex - lastIndex;\n      // var angle = deltaY / deltaX;\n      // var basePrice = lastClose + (currentIndex - lastIndex) * angle;\n      // var noise = (0.1 - Math.random() * 0.2) + 1.0;\n      // var noisedPrice = basePrice * noise;\n      // mergeTickToBar(noisedPrice);\n      // if (++ticksInCurrentBar === 5) {\n      //   // move to next bar\n      //   currentIndex++;\n      //   currentBusinessDay = nextBusinessDay(currentBusinessDay);\n      //   currentBar = {\n      //     open: 0,\n      //     high: 0,\n      //     low: 0,\n      //     close: 0,\n      //     time: currentBusinessDay,\n      //   };\n      //   ticksInCurrentBar = 0;\n      //   if (currentIndex === 5000) {\n      //     reset();\n      //     return;\n      //   }\n      //   if (currentIndex === targetIndex) {\n      //     // change trend\n      //     lastClose = noisedPrice;\n      //     lastIndex = currentIndex;\n      //     targetIndex = lastIndex + 5 + Math.round(Math.random() + 30);\n      //     targetPrice = getRandomPrice();\n      //   }\n      // }\n    }, 200);}\n\n    return (\n      <div>\n              <Container>\n                <Row>\n                  <Col>\n                  <p>haha</p>\n                  </Col>\n                  <Col>\n                  <Row>\n                 \n                    <Level2 />\n                    <TimeNSales />\n                    \n                  </Row>\n                  </Col>\n                  </Row>\n                 \n                </Container>\n\n            </div>\n    );\n}\n\nexport default Simulation;","/Users/kev/Documents/GitHub/Backtesting_Model/client/src/ts/components/index.tsx",[],"/Users/kev/Documents/GitHub/Backtesting_Model/client/src/Home/tabs/Home.tsx",["74","75"],"import React,{ FunctionComponent,useEffect, useState} from 'react';\n\nconst Home:FunctionComponent<any> = (props) => {\n    return (\n        <div>\n            <h2>This is the Home page</h2>\n        </div>\n    );\n}\n\nexport default Home;","/Users/kev/Documents/GitHub/Backtesting_Model/client/src/Home/tabs/About.tsx",["76","77"],"import React,{ FunctionComponent,useEffect, useState} from 'react';\n\nconst About:FunctionComponent<any> = (props) => {\n    return (\n        <div>\n            <h2>This is the About page</h2>\n        </div>\n    );\n}\n\nexport default About;","/Users/kev/Documents/GitHub/Backtesting_Model/client/src/ts/components/layouts/NavBar.tsx",[],"/Users/kev/Documents/GitHub/Backtesting_Model/client/src/ts/components/layouts/Jumbotron.tsx",["78"],"import React, { FunctionComponent } from \"react\";\nimport { Jumbotron, Container,Button } from \"react-bootstrap\";\n\nconst TopHeader: FunctionComponent<any> = () => {\n  return (\n    <Jumbotron fluid>\n      <Container>\n        <h1>Welcome to Project Alpha</h1>\n        <p>Backtesting Engine</p>\n      </Container>\n    </Jumbotron>\n  );\n};\n\nexport default TopHeader;\n",["79","80"],"/Users/kev/Documents/GitHub/Backtesting_Model/client/src/Home/tabs/Level2.tsx",["81","82","83","84","85","86","87","88","89","90","91","92","93"],"import React,{ FunctionComponent,useEffect, useState,Component} from 'react';\nimport { Form, Button, Row, Col, Table, Image, DropdownButton, Dropdown, Container } from \"react-bootstrap\";\nclass Level2 extends Component{\n\n  \n \n    \n    \n    render(){\n        let arr = []\n        let colors = [\"primary\",\"secondary\",\"success\",\"danger\",\"warning\",\"info\"]\n        let prices = [1,2,2,2,3,4,4,4,5,6,6,7,8,9,9,9,10,11]\n        let start_Num = 0\n        let end_Num = start_Num+1;\n        let endlist = 0;\n        let color = 0;\n\n        const styles = {\n          grid: {\n              paddingLeft: 0,\n              paddingRight: 0\n          },\n          row: {\n              marginLeft: 0,\n              marginRight: 0\n          },\n          col: {\n              paddingLeft: 0,\n              paddingRight: 0\n          }\n      };\n        \n        \n        while(endlist == 0){\n            if (end_Num >= prices.length || start_Num == end_Num)\n            {\n                endlist++;\n            } \n            if(prices[start_Num] == prices[end_Num])\n            {\n                while(prices[start_Num] == prices[end_Num])\n                {\n                    arr.push(\n                        <tr className={\"table-\"+colors[color]}>\n                        <td>EDGA</td>\n                        <td>{prices[start_Num]}</td>\n                        <td>175.22</td>\n                        </tr>\n                    )\n                    end_Num++;\n                }\n                arr.push(\n                    <tr className={\"table-\"+colors[color]}>\n                    <td>EDGA</td>\n                    <td>{prices[start_Num]}</td>\n                    <td>175.22</td>\n                    </tr>\n                )\n               \n                start_Num = end_Num -1;\n                start_Num++;\n                end_Num++;\n                color++;\n                \n                \n            }\n            else\n            {\n                \n                arr.push(\n                    <tr className={\"table-\"+colors[color]}>\n                    <td>EDGA</td>\n                    <td>{prices[start_Num]}</td>\n                    <td>175.22</td>\n                    </tr>\n                )\n                color++;\n                start_Num++;\n                end_Num++;\n            }\n\n            if(color == 6)\n            {\n                color = 0;\n            }\n        }\n        \n    \n        \n        \n        return(\n\n          \n           <Container>\n              \n                    <Row style={styles.row}>\n                      <Col style={styles.col}>\n                      \n                            <Table striped bordered hover>\n                    <thead>\n                      <tr>\n                        \n                        \n                      </tr>\n\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <th>Last</th>\n                        <th>175.26</th>\n                        <th>-175.26</th>\n                    \n                      </tr>\n                      <tr>\n                        <th>Lv1</th>\n                        <th>175.26</th>\n                        <th>-175.26</th>\n                    \n                \n                      </tr>\n                      </tbody>\n                      </Table>\n                      </Col>\n                      <Col style={styles.col}>\n                      <Table striped bordered hover>\n                    <thead>\n                      <tr>\n                        \n                        \n                      </tr>\n\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <th>Vol</th>\n                        <th>175.26</th>\n                        \n                      </tr>\n                      <tr>\n                        <th>功能区</th>\n                        <th>功能区</th>\n                        \n                      </tr>\n                      </tbody>\n                </Table>\n                      </Col>\n                      </Row>\n                     \n                      <Row style={styles.row}>\n            <Col style={styles.col}>\n          \n          \n        <Table striped bordered hover>\n            \n          <thead>\n            <tr>\n              <th>Market Makers</th>\n              \n              <th>Order Size</th>\n              <th>Price</th>\n            </tr>\n          </thead>\n          <tbody>\n          {arr}\n          </tbody>\n        </Table>\n        </Col>\n        <Col style={styles.col}>\n          \n        <Table striped bordered hover>\n            \n          <thead>\n            <tr>\n              <th>Market Makers</th>\n              <th>Price</th>\n              <th>Order Size</th>\n            </tr>\n          </thead>\n          <tbody>\n          {arr}\n          </tbody>\n        </Table>\n        </Col>\n        </Row>\n          \n</Container>\n        \n\n\n\n        )\n    }\n}\n\nexport default Level2;","/Users/kev/Documents/GitHub/Backtesting_Model/client/src/Home/tabs/TimeNSales.tsx",["94","95","96","97","98","99","100","101","102","103","104"],"import React,{ FunctionComponent,useEffect, useState,Component} from 'react';\nimport { Form, Button, Row, Col, Table, Image, DropdownButton, Dropdown, Container } from \"react-bootstrap\";\n\nclass TimeNSales extends Component{\n\n    createTableLeft = () => {\n        var my_data = [[\"PSEc\",1184.9,1,\"07:58:11\"],[\"PSEc\",1184.9,1,\"07:58:11\"],\n                        [\"PSEc\",1184.9,1,\"07:58:11\"],[\"PSEc\",1184.9,1,\"07:58:11\"],\n                        [\"PSEc\",1184.9,1,\"07:58:11\"],[\"PSEc\",1184.9,1,\"07:58:11\"],\n                        [\"PSEc\",1184.9,1,\"07:58:11\"],[\"PSEc\",1184.9,1,\"07:58:11\"],\n                        [\"PSEc\",1184.9,1,\"07:58:11\"],[\"PSEc\",1184.9,1,\"07:58:11\"],\n                        [\"PSEc\",1184.9,1,\"07:58:11\"],[\"PSEc\",1184.9,1,\"07:58:11\"],\n                        [\"PSEc\",1184.9,1,\"07:58:11\"],[\"PSEc\",1184.9,1,\"07:58:11\"],\n                        [\"PSEc\",1184.9,1,\"07:58:11\"],[\"PSEc\",1184.9,1,\"07:58:11\"]]\n        let table = []\n        var colour = [\"table-primary\",\"table-secondary\",\"table-success\", \"table-danger\"]\n        // Outer loop to create parent\n        var k=0\n        for (let i = 0; i < my_data.length; i++) {\n          let children = []\n          //Inner loop to create children\n          for (let j = 0; j < my_data[1].length; j++) {\n            children.push(<td>{`${my_data[i][j]}`}</td>)\n          }\n          //Create the parent and add the children\n          table.push(<tr className={colour[k]}>{children}</tr>)\n          k+=1\n          if (k == 4) {\n            k = 0\n          }\n        }\n        return table\n    }\n\n    createTableRight = () => {\n      var my_data = [[\"PSEc\",\"1186.0\",6,\"07:58:20\"],[\"PSEc\",\"1186.0\",6,\"07:58:20\"],\n                      [\"PSEc\",\"1186.0\",6,\"07:58:20\"],[\"PSEc\",\"1186.0\",6,\"07:58:20\"],\n                      [\"PSEc\",\"1186.0\",6,\"07:58:20\"],[\"PSEc\",\"1186.0\",6,\"07:58:20\"],\n                      [\"PSEc\",\"1186.0\",6,\"07:58:20\"],[\"PSEc\",\"1186.0\",6,\"07:58:20\"],\n                      [\"PSEc\",\"1186.0\",6,\"07:58:20\"],[\"PSEc\",\"1186.0\",6,\"07:58:20\"],\n                      [\"PSEc\",\"1186.0\",6,\"07:58:20\"],[\"PSEc\",\"1186.0\",6,\"07:58:20\"],\n                      [\"PSEc\",\"1186.0\",6,\"07:58:20\"],[\"PSEc\",\"1186.0\",6,\"07:58:20\"],\n                      [\"PSEc\",\"1186.0\",6,\"07:58:20\"],[\"PSEc\",\"1186.0\",6,\"07:58:20\"]]\n      let table = []\n      var colour = [\"table-primary\",\"table-secondary\",\"table-success\", \"table-danger\"]\n      // Outer loop to create parent\n      var k=0\n      for (let i = 0; i < my_data.length; i++) {\n        let children = []\n        //Inner loop to create children\n        for (let j = 0; j < my_data[1].length; j++) {\n          children.push(<td>{`${my_data[i][j]}`}</td>)\n        }\n        //Create the parent and add the children\n        table.push(<tr className={colour[k]}>{children}</tr>)\n        k+=1\n        if (k == 4) {\n          k = 0\n        }\n      }\n      return table\n  }\n\n    \n    createUpperTable = () => {\n      var my_data_second = [10,11,12,13,14,15]\n      let table = []\n      // Outer loop to create parent\n      var k=0\n        let children = []\n        //Inner loop to create children\n        // children.push(<td >{`hello ${my_data[i][j]}`}</td>)\n        children.push(<td>{`Bid ${my_data_second[0]}`}</td>)\n        children.push(<td>{`Bid Size ${my_data_second[1]}`}</td>)\n        children.push(<td>{`Low ${my_data_second[2]}`}</td>)\n        children.push(<td>{`change`}</td>)\n        //Create the parent and add the children\n        table.push(<tr>{children}</tr>)\n\n        children = []\n        children.push(<td>{`Ask ${my_data_second[0]}`}</td>)\n        children.push(<td>{`Ask Size ${my_data_second[1]}`}</td>)\n        children.push(<td >{`High ${my_data_second[2]}`}</td>)\n        children.push(<td>{`change(open)`}</td>)\n        //Create the parent and add the children\n        table.push(<tr>{children}</tr>)\n        k+=1\n        if (k == 4) {\n          k = 0\n        }\n      \n      return table\n  }\n\n\n\n\n    render(){\n\n        \n        return(\n            <Container>\n                <Row>\n                <Col sm={4}>\n\n                <Table striped bordered hover className=\"table table-lg\">\n    <tbody>\n\n        {this.createUpperTable()}  \n\n          <tr>\n            <td colSpan={2}>\n            <Table striped bordered hover>\n    <thead>\n        <tr>\n        <th>MM</th>\n        <th>Bid</th>\n        <th>Size</th>\n        <th>Time</th>\n        </tr>\n    </thead>\n    <tbody>\n        {this.createTableLeft()}  \n    </tbody>\n    </Table>\n            </td>\n\n            <td colSpan={2}>\n    <Table striped bordered hover>\n    <thead>\n        <tr>\n        <th>MM</th>\n        <th>Bid</th>\n        <th>Size</th>\n        <th>Time</th>\n        </tr>\n    </thead>\n    <tbody>\n        {this.createTableRight()}  \n    </tbody>\n    </Table>\n            </td>\n          </tr>\n\n\n\n    </tbody>\n    </Table>\n\n\n\n    </Col>\n                </Row>\n\n            </Container>\n)\n}\n}\n\nexport default TimeNSales;\n\n\n\n\n\n\n\n",{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":26},{"ruleId":"109","severity":1,"message":"113","line":1,"column":36,"nodeType":"111","messageId":"112","endLine":1,"endColumn":45},{"ruleId":"109","severity":1,"message":"114","line":2,"column":41,"nodeType":"111","messageId":"112","endLine":2,"endColumn":46},{"ruleId":"109","severity":1,"message":"115","line":174,"column":30,"nodeType":"111","messageId":"112","endLine":174,"endColumn":51},{"ruleId":"109","severity":1,"message":"116","line":203,"column":23,"nodeType":"111","messageId":"112","endLine":203,"endColumn":37},{"ruleId":"109","severity":1,"message":"117","line":1,"column":39,"nodeType":"111","messageId":"112","endLine":1,"endColumn":47},{"ruleId":"118","severity":1,"message":"119","line":37,"column":7,"nodeType":"120","endLine":37,"endColumn":9,"suggestions":"121"},{"ruleId":"109","severity":1,"message":"122","line":88,"column":13,"nodeType":"111","messageId":"112","endLine":88,"endColumn":21},{"ruleId":"109","severity":1,"message":"113","line":1,"column":34,"nodeType":"111","messageId":"112","endLine":1,"endColumn":43},{"ruleId":"109","severity":1,"message":"117","line":1,"column":45,"nodeType":"111","messageId":"112","endLine":1,"endColumn":53},{"ruleId":"109","severity":1,"message":"113","line":1,"column":34,"nodeType":"111","messageId":"112","endLine":1,"endColumn":43},{"ruleId":"109","severity":1,"message":"117","line":1,"column":45,"nodeType":"111","messageId":"112","endLine":1,"endColumn":53},{"ruleId":"109","severity":1,"message":"123","line":2,"column":31,"nodeType":"111","messageId":"112","endLine":2,"endColumn":37},{"ruleId":"105","replacedBy":"124"},{"ruleId":"107","replacedBy":"125"},{"ruleId":"109","severity":1,"message":"126","line":1,"column":16,"nodeType":"111","messageId":"112","endLine":1,"endColumn":33},{"ruleId":"109","severity":1,"message":"113","line":1,"column":34,"nodeType":"111","messageId":"112","endLine":1,"endColumn":43},{"ruleId":"109","severity":1,"message":"117","line":1,"column":45,"nodeType":"111","messageId":"112","endLine":1,"endColumn":53},{"ruleId":"109","severity":1,"message":"127","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":14},{"ruleId":"109","severity":1,"message":"123","line":2,"column":16,"nodeType":"111","messageId":"112","endLine":2,"endColumn":22},{"ruleId":"109","severity":1,"message":"114","line":2,"column":41,"nodeType":"111","messageId":"112","endLine":2,"endColumn":46},{"ruleId":"109","severity":1,"message":"128","line":2,"column":48,"nodeType":"111","messageId":"112","endLine":2,"endColumn":62},{"ruleId":"109","severity":1,"message":"129","line":2,"column":64,"nodeType":"111","messageId":"112","endLine":2,"endColumn":72},{"ruleId":"130","severity":1,"message":"131","line":34,"column":23,"nodeType":"132","messageId":"133","endLine":34,"endColumn":25},{"ruleId":"130","severity":1,"message":"131","line":35,"column":55,"nodeType":"132","messageId":"133","endLine":35,"endColumn":57},{"ruleId":"130","severity":1,"message":"131","line":39,"column":34,"nodeType":"132","messageId":"133","endLine":39,"endColumn":36},{"ruleId":"130","severity":1,"message":"131","line":41,"column":41,"nodeType":"132","messageId":"133","endLine":41,"endColumn":43},{"ruleId":"130","severity":1,"message":"131","line":82,"column":22,"nodeType":"132","messageId":"133","endLine":82,"endColumn":24},{"ruleId":"109","severity":1,"message":"126","line":1,"column":16,"nodeType":"111","messageId":"112","endLine":1,"endColumn":33},{"ruleId":"109","severity":1,"message":"113","line":1,"column":34,"nodeType":"111","messageId":"112","endLine":1,"endColumn":43},{"ruleId":"109","severity":1,"message":"117","line":1,"column":45,"nodeType":"111","messageId":"112","endLine":1,"endColumn":53},{"ruleId":"109","severity":1,"message":"127","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":14},{"ruleId":"109","severity":1,"message":"123","line":2,"column":16,"nodeType":"111","messageId":"112","endLine":2,"endColumn":22},{"ruleId":"109","severity":1,"message":"114","line":2,"column":41,"nodeType":"111","messageId":"112","endLine":2,"endColumn":46},{"ruleId":"109","severity":1,"message":"128","line":2,"column":48,"nodeType":"111","messageId":"112","endLine":2,"endColumn":62},{"ruleId":"109","severity":1,"message":"129","line":2,"column":64,"nodeType":"111","messageId":"112","endLine":2,"endColumn":72},{"ruleId":"130","severity":1,"message":"131","line":28,"column":17,"nodeType":"132","messageId":"133","endLine":28,"endColumn":19},{"ruleId":"130","severity":1,"message":"131","line":57,"column":15,"nodeType":"132","messageId":"133","endLine":57,"endColumn":17},{"ruleId":"130","severity":1,"message":"131","line":88,"column":15,"nodeType":"132","messageId":"133","endLine":88,"endColumn":17},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"@typescript-eslint/no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Image' is defined but never used.","'setCandlestickOptions' is assigned a value but never used.","'setLineOptions' is assigned a value but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getChart', 'getData', and 'loading'. Either include them or remove the dependency array.","ArrayExpression",["136"],"'initData' is assigned a value but never used.","'Button' is defined but never used.",["134"],["135"],"'FunctionComponent' is defined but never used.","'Form' is defined but never used.","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},"Update the dependencies array to be: [getChart, getData, loading]",{"range":"139","text":"140"},[1008,1010],"[getChart, getData, loading]"]