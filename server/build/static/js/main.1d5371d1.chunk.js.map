{"version":3,"sources":["ts/components/layouts/NavBar.tsx","ts/components/layouts/Jumbotron.tsx","Home/tabs/Home.tsx","Home/tabs/About.tsx","Test/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NavigationBar","className","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Item","Link","TopHeader","Jumbotron","fluid","Container","Home","props","data","x","y","type","mode","marker","color","layout","width","height","title","config","scrollZoom","About","Test","emptyRatio","Volatility","Skew","Kurtosis","VAR","useState","validatedForm","setValidatedForm","monthCheck","setMonthCheck","underlying","expMonth","methods","daterange_from","daterange_to","formData","setFormData","tableHeader","setTableHeader","tableRows","setTableRows","showbutton","setShowButton","showDropdownButton","setShowDropdownButton","showCandlestick","setShowCandlestick","showLine","setShowLine","EMA","TEMA","MACD","resData","setResData","graphType","setGraphType","dropdownValue","setDropdownValue","chart","text","align","xaxis","tooltip","format","yaxis","enabled","candlestickOptions","name","candlestickSeries","setCandlestickSeries","shared","intersect","markers","size","fill","colors","lineOptions","lineSeries","setLineSeries","Form","noValidate","validated","onSubmit","e","form","currentTarget","preventDefault","checkValidity","stopPropagation","setTimeout","console","log","axios","method","url","params","then","response","tempHeader","Object","keys","map","d","tempRows","catch","err","Group","controlId","Label","Control","placeholder","onChange","target","value","required","Feedback","isInvalid","as","Row","Col","Button","variant","onClick","DropdownButton","onSelect","Dropdown","eventKey","Table","striped","bordered","hover","responsive","options","series","App","Fragment","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d5371d1.chunk.js","sourcesContent":["import React, { FunctionComponent } from \"react\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport \"./layouts.scss\";\n\nconst NavigationBar: FunctionComponent<any> = () => {\n  return (\n    <div className=\"main--nav-bar\">\n      <Navbar expand=\"lg\">\n        <Navbar.Brand href=\"/\">STS Home</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\" />\n        <Nav>\n          <Nav.Item>\n            <Nav.Link href=\"/test\">Test</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link href=\"/about\">About</Nav.Link>\n          </Nav.Item>\n        </Nav>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default NavigationBar;\n","import React, { FunctionComponent } from \"react\";\nimport { Jumbotron, Container,Button } from \"react-bootstrap\";\n\nconst TopHeader: FunctionComponent<any> = () => {\n  return (\n    <Jumbotron fluid>\n      <Container>\n        <h1>Welcome to Project Alpha</h1>\n        <p>Backtesting Engine</p>\n      </Container>\n    </Jumbotron>\n  );\n};\n\nexport default TopHeader;\n","import React,{ FunctionComponent,useEffect, useState} from 'react';\nimport { Card, Button } from \"react-bootstrap\";\nimport applelogo from \"../image/apple.jpg\";\nimport axios from \"axios\";\nimport Plot from \"react-plotly.js\";\n\n// type listDataType = {\n//     ticker?: string,\n//     price?: number,\n//     change?: number\n// };\n\nconst Home:FunctionComponent<any> = (props) => {\n    // const [list, setList] = useState<listDataType[]>([]);\n    // useEffect(() => {\n    //     fetch('http://127.0.0.1:5000/home/stocks/', {\n    //         method: 'GET', \n    //         headers: {\n    //             'Content-Type': 'application/json',\n    //         },\n    //     }).then(res => res.json()).then(data => {\n    //       setList(data);\n    //       console.log(data)\n    //     });\n    //   }, []);\n\n    return (\n        // <div>\n        // {list.map((item) => (\n        //     <Card style={{ width: '18rem' }}>\n        //         <Card.Body>\n        //             <Card.Title>{item.ticker}</Card.Title>\n        //             <Card.Text>\n        //                 Price: {item.price}\n        //             </Card.Text>\n        //             <Card.Text>\n        //                 Change: {item.change}\n        //             </Card.Text>\n        //         </Card.Body>\n        //     </Card>\n        // ))}\n        // </div>\n        <div>\n            <Plot\n        data={[\n          {\n            x: [1, 2, 3],\n            y: [2, 6, 3],\n            type: 'scatter',\n            mode: 'lines+markers',\n            marker: {color: 'red'},\n          },\n          {type: 'bar', x: [1, 2, 3], y: [2, 5, 3]},\n        ]}\n        layout={ {width: 800, height: 400, title: 'A Fancy Plot'} }\n        config={{ scrollZoom: true }}\n      />\n        </div>\n        \n    );\n}\n\nexport default Home;","import React,{ FunctionComponent,useEffect, useState} from 'react';\n\nconst About:FunctionComponent<any> = (props) => {\n    return (\n        <div>\n            <h2>This is the About page</h2>\n        </div>\n    );\n}\n\nexport default About;","import React, { FunctionComponent, useEffect, useState } from \"react\";\nimport { Form, Button, Row, Col, Table, Image, DropdownButton, Dropdown } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Chart from \"react-apexcharts\";\n// import EMAGraph from \"../graph/EMA.png\"\n// import TEMAGraph from \"../graph/TEMA.png\"\n// import MACDGraph from \"../graph/MACD.png\"\n// import redarrow from '../image/redarrow.png'\n// import greenarrow from '../image/greenarrow.png'\n\ntype submitDataType = {\n  underlying: string;\n  expMonth: string;\n  methods: string;\n  daterange_from: string;\n  daterange_to: string;\n};\n\ntype ratioDataType = {\n  \"Cumulative Return\": number;\n  \"Annual return\": number;\n  \"Win percentage\": number;\n  \"Win loss ratio\": number | string;\n  \"Volatility\": number;\n  \"Annual volatility\": number;\n  \"Sharpe ratio\": number | string;\n  \"Sortino ratio\": number | string;\n  \"Max drawdown\": number;\n  \"Calmar ratio\": number | string;\n  \"Omega ratio\": number | string;\n  \"Skew\": number;\n  \"Kurtosis\": number;\n  \"Tail ratio\": number;\n  \"VAR\": number;\n};\n\ntype responseDataType = {\n  \"EMA\": ratioDataType;\n  \"TEMA\": ratioDataType;\n  \"MACD\": ratioDataType;\n  \"OHLC\": number[];\n  \"Close\": number[];\n  \"EMA_buy\": number[];\n  \"EMA_sell\": number[];\n  \"TEMA_buy\": number[];\n  \"TEMA_sell\": number[];\n  \"MACD_buy\": number[];\n  \"MACD_sell\": number[];\n};\n\n// Data Type for candlestick\ntype optionsDataType = {\n  chart: chartDataType;\n  title: titleDataType;\n  xaxis: xaxisDataType;\n  yaxis: yaxisDataType;\n  tooltip?: tooltipDataType;\n  markers?: markerDataType;\n  fill?: fillDataType;\n  colors?: string | string[];\n};\n\ntype chartDataType = {\n  id?: string;\n  type?: string;\n  height?: number;\n};\n\ntype titleDataType = {\n  text?: string;\n  align?: string;\n};\n\ntype xaxisDataType = {\n  categories?: number[];\n  type?: string;\n  labels?: labelDataType;\n};\n\ntype labelDataType = {\n  format?: string;\n}\n\ntype yaxisDataType = {\n  tooltip?: tooltipDataType;\n};\n\ntype tooltipDataType = {\n  enabled?: boolean;\n  x?: labelDataType;\n  y?: labelDataType;\n  shared?: boolean;\n  intersect?: boolean;\n};\n\ntype markerDataType = {\n  size: number[];\n  shape?: string;\n  colors?: string[] | string;\n};\n\ntype seriesDataType = {\n  name: string;\n  data: number[] | number[][];\n  type?: string;\n};\n\ntype fillDataType = {\n  type: string | string[];\n  opacity?: number;\n  image?: imageDataType;\n  colors?: string[] | string;\n};\n\ntype imageDataType = {\n  src: string | string[];\n  width?: number;\n  height?: number;\n};\n\n\nconst Test: FunctionComponent<any> = (props) => {\n  const emptyData: submitDataType = {\n    underlying: \"\",\n    expMonth: \"\",\n    methods: \"\",\n    daterange_from: \"\",\n    daterange_to: \"\",\n  };\n\n  const emptyRatio: ratioDataType = {\n    \"Cumulative Return\": 0,\n    \"Annual return\": 0,\n    \"Win percentage\": 0,\n    \"Win loss ratio\": 1,\n    Volatility: 0,\n    \"Annual volatility\": 0,\n    \"Sharpe ratio\": 0,\n    \"Sortino ratio\": 0,\n    \"Max drawdown\": 0,\n    \"Calmar ratio\": 0,\n    \"Omega ratio\": 0,\n    Skew: 0,\n    Kurtosis: 0,\n    \"Tail ratio\": 0,\n    VAR: 0\n  };\n\n  const [validatedForm, setValidatedForm] = useState<boolean>(false);\n  const [monthCheck, setMonthCheck] = useState<boolean>(false);\n  const [formData, setFormData] = useState<submitDataType>(emptyData);\n  const [tableHeader, setTableHeader] = useState<any>(<></>);\n  const [tableRows, setTableRows] = useState<any>(<></>);\n  const [showbutton, setShowButton] = useState<boolean>(true);\n  // const [showGraph, setShowGraph] = useState<boolean>(false);\n  const [showDropdownButton, setShowDropdownButton] = useState<boolean>(false);\n  const [showCandlestick, setShowCandlestick] = useState<boolean>(false);\n  const [showLine, setShowLine] = useState<boolean>(false);\n  const [resData, setResData] = useState<responseDataType>({\n    EMA: emptyRatio,\n    TEMA: emptyRatio,\n    MACD: emptyRatio,\n    \"OHLC\": [],\n    \"Close\": [],\n    \"EMA_buy\": [],\n    \"EMA_sell\": [],\n    \"TEMA_buy\": [],\n    \"TEMA_sell\": [],\n    \"MACD_buy\": [],\n    \"MACD_sell\": []\n  });\n  const [graphType, setGraphType] = useState<string>(\"\");\n  const [dropdownValue, setDropdownValue] = useState<string>(\"EMA\");\n  const [candlestickOptions, setCandlestickOptions] = useState<optionsDataType>({\n    chart: {\n      type: 'candlestick',\n      height: 350\n    },\n    title: {\n      text: 'CandleStick Chart',\n      align: 'left'\n    },\n    xaxis: {\n      type: 'datetime'\n    },\n    tooltip: {\n      x: {\n        format: 'dd MMM yyyy'\n      }\n    },\n    yaxis: {\n      tooltip: {\n        enabled: true\n      }\n    }\n  })\n  const [candlestickSeries, setCandlestickSeries] = useState<seriesDataType[]>(\n    [{\n      name: 'Statistic',\n      data: []\n    }]\n  );\n  const [lineOptions, setLineOptions] = useState<optionsDataType>({\n    chart: {\n      height: 350,\n      type: 'line'\n    },\n    title: {\n      text: 'Trading Record',\n      align: 'left'\n    },\n    xaxis: {\n      type: 'datetime'\n    },\n    tooltip: {\n      x: {\n        format: 'dd MMM yyyy'\n      },\n      shared: false,\n      intersect: true,\n    },\n    yaxis: {\n      tooltip: {\n        enabled: true\n      }\n    },\n    markers: {\n      size: [0,6,6],\n    },\n    fill: {\n      type: 'solid',\n      \n    },\n    colors: ['#267CE3', '#22DB35', '#FF3F00']\n  });\n\n  const [lineSeries, setLineSeries] = useState<seriesDataType[]>(\n    [{\n      name: 'Line',\n      type: \"line\",\n      data: []\n    },{\n      name: 'Buy',\n      type: \"scatter\",\n      data: []\n    },{\n      name: 'Sell',\n      type: \"scatter\",\n      data: []\n    }]\n  );\n\n  const handleSubmit = (e: any) => {\n    const form = e.currentTarget;\n    e.preventDefault();\n    if (form.checkValidity() === false) {\n      e.stopPropagation();\n      setValidatedForm(true);\n      setTimeout(() => {\n        setValidatedForm(false);\n      }, 3000);\n    } else {\n      console.log(formData);\n      axios({\n        method: \"post\",\n        url: \"http://127.0.0.1:5000/result/\",\n        params: formData,\n      })\n        .then((response) => {\n          setShowButton(!showbutton);\n          // setShowGraph(true);\n          setShowDropdownButton(true);\n          setShowCandlestick(true);\n          setShowLine(true);\n          let tempHeader = Object.keys(response.data[dropdownValue]).map((d) => <th>{d}</th>);\n          let tempRows = Object.keys(response.data[dropdownValue]).map((d) => (\n            <td>{response.data[dropdownValue][d]}</td>\n          ));\n          setGraphType(\"EMA\");\n          setResData(response.data);\n          setTableHeader(tempHeader);\n          setTableRows(tempRows);\n          setCandlestickSeries([{\n            name: 'Candlestick',\n            data: response.data['OHLC']\n          }]);\n          setLineSeries([{\n            name: 'Closing Price',\n            type: 'line',\n            data: response.data['Close']\n          }, {\n            name: 'Buy',\n            type: 'scatter',\n            data: response.data[dropdownValue+'_buy']\n          }, {\n            name: 'Sell',\n            type: 'scatter',\n            data: response.data[dropdownValue+'_sell']\n          }]);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  const handleSelect=(e:string | null)=>{\n    console.log(e)\n    var tempHeader;\n    var tempRows;\n    if(e === \"EMA\"){\n      tempHeader = Object.keys(resData['EMA']).map((d) => <th>{d}</th>);\n      tempRows = Object.keys(resData['EMA']).map((d) => (\n        <td>{(resData['EMA'] as any)[d]}</td>\n      ));\n      setGraphType(\"EMA\");\n      setLineSeries([{\n        name: 'Closing Price',\n        type: 'line',\n        data: resData['Close']\n      }, {\n        name: 'Buy',\n        type: 'scatter',\n        data: resData['EMA_buy']\n      }, {\n        name: 'Sell',\n        type: 'scatter',\n        data: resData['EMA_sell']\n      }]);\n      console.log(graphType);\n    }\n    else if(e === \"TEMA\"){\n      tempHeader = Object.keys(resData['TEMA']).map((d) => <th>{d}</th>);\n      tempRows = Object.keys(resData['TEMA']).map((d) => (\n        <td>{(resData['TEMA'] as any)[d]}</td>\n      ));\n      setGraphType(\"TEMA\");\n      setLineSeries([{\n        name: 'Closing Price',\n        type: 'line',\n        data: resData['Close']\n      }, {\n        name: 'Buy',\n        type: 'scatter',\n        data: resData['TEMA_buy']\n      }, {\n        name: 'Sell',\n        type: 'scatter',\n        data: resData['TEMA_sell']\n      }]);\n      console.log(graphType);\n    } else {\n      tempHeader = Object.keys(resData['MACD']).map((d) => <th>{d}</th>);\n      tempRows = Object.keys(resData['MACD']).map((d) => (\n        <td>{(resData['MACD'] as any)[d]}</td>\n      ));\n      setGraphType(\"MACD\");\n      setLineSeries([{\n        name: 'Closing Price',\n        type: 'line',\n        data: resData['Close']\n      }, {\n        name: 'Buy',\n        type: 'scatter',\n        data: resData['MACD_buy']\n      }, {\n        name: 'Sell',\n        type: 'scatter',\n        data: resData['MACD_sell']\n      }]);\n      console.log(graphType);\n    }\n    setTableHeader(tempHeader);\n    setTableRows(tempRows);\n  }\n\n  return (\n    <div>\n      {showbutton ? (\n        <Form noValidate validated={validatedForm} onSubmit={handleSubmit}>\n          <Form.Group controlId=\"underlying\">\n            <Form.Label>Underlying:</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Please enter underlying here\"\n              onChange={(e: any) => {\n                setFormData({ ...formData, underlying: e.target.value });\n              }}\n              value={formData.underlying}\n              required\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Underlying can't be empty.\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"expiremonth\">\n            <Form.Label>Expiration Month:</Form.Label>\n            <Form.Control\n              type=\"number\"\n              placeholder=\"Please enter expiration month here\"\n              required\n              isInvalid={monthCheck}\n              value={formData.expMonth}\n              onChange={(e: any) => {\n                if (e.target.value > 99 || e.target.value === null) {\n                  setMonthCheck(true);\n                } else {\n                  setMonthCheck(false);\n                }\n                setFormData({ ...formData, expMonth: e.target.value });\n              }}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              This field can't be empty. And you must enter no more than 2\n              numbers.\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"methods\">\n            <Form.Label>Select a method:</Form.Label>\n            <Form.Control\n              as=\"select\"\n              placeholder=\"Select a value:\"\n              onChange={(e: any) => {\n                setFormData({ ...formData, methods: e.target.value });\n              }}\n              value={formData.methods}\n              required\n            >\n              <option></option>\n              <option>First Of Month</option>\n              <option>Last Trading Day</option>\n              <Form.Control.Feedback type=\"invalid\">\n                You must select a value.\n              </Form.Control.Feedback>\n            </Form.Control>\n          </Form.Group>\n          <Row>\n            <Col>\n              <Form.Group controlId=\"startdate\">\n                <Form.Label>Select Start Date:</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  placeholder=\"Select start date:\"\n                  onChange={(e: any) => {\n                    setFormData({\n                      ...formData,\n                      daterange_from: e.target.value,\n                    });\n                  }}\n                  value={formData.daterange_from}\n                  required\n                ></Form.Control>\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group controlId=\"enddate\">\n                <Form.Label>Select End Date:</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  placeholder=\"Select end date:\"\n                  onChange={(e: any) => {\n                    setFormData({ ...formData, daterange_to: e.target.value });\n                  }}\n                  value={formData.daterange_to}\n                  required\n                ></Form.Control>\n              </Form.Group>\n            </Col>\n          </Row>\n          <Button type=\"submit\" className=\"btn-block mt-2\">Submit form</Button>\n        </Form>\n      ) : (\n        <></>\n      )}\n      <Button\n        variant=\"outline-primary\"\n        onClick={() => {\n          setShowButton(!showbutton);\n        }}\n        className=\"btn-block p-0 mt-3\"\n      >\n        {showbutton ? \"Hide Input Form\" : \"Show Input Form\"}\n      </Button>\n      { showDropdownButton ? (\n        <DropdownButton \n        id=\"dropdown-basic-button\" \n        title={dropdownValue}\n        onSelect={handleSelect}\n        className=\"mt-4 mb-4\">\n          <Dropdown.Item eventKey=\"EMA\" onClick={() => setDropdownValue(\"EMA\")}>EMA</Dropdown.Item>\n          <Dropdown.Item eventKey=\"TEMA\" onClick={() => setDropdownValue(\"TEMA\")}>TEMA</Dropdown.Item>\n          <Dropdown.Item eventKey=\"MACD\" onClick={() => setDropdownValue(\"MACD\")}>MACD</Dropdown.Item>\n        </DropdownButton>\n      ) : (\n        <></>\n      )}\n\n      <Table striped bordered hover responsive>\n        <thead>\n          <tr>{tableHeader}</tr>\n        </thead>\n        <tbody>\n          <tr>{tableRows}</tr>\n        </tbody>\n      </Table>  \n\n      { showLine ? (\n        <Chart options={lineOptions} series={lineSeries} type=\"line\" width={1100} height={500}/>\n      ) : (\n        <></>\n      )}\n\n      { showCandlestick ? (\n        <Chart options={candlestickOptions} series={candlestickSeries} type=\"candlestick\" width={1100} height={500}/>\n      ) : (\n        <></>\n      )}\n\n      {/* {(function() {\n        if(showGraph) {\n          if (graphType === \"EMA\") {\n            console.log(\"here at ema\");\n            return <Image src={EMAGraph} key={Date.now()} onLoad={() => console.log(\"loaded at ema\")} fluid/>;\n          } else if (graphType === \"TEMA\") {\n            console.log(\"here at tema\");\n            return <Image src={TEMAGraph} key={Date.now()} onLoad={() => console.log(\"loaded at tema\")} fluid/>;\n          } else {\n            console.log(\"here at macd\");\n            return <Image src={MACDGraph} key={Date.now()} onLoad={() => console.log(\"loaded at macd\")}  fluid/>\n          }\n        } else {\n          return <></>;\n        }    \n      })()} */}\n      \n    </div>\n  );\n};\n\nexport default Test;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\nimport { NavigationBar,TopHeader } from \"./ts/components/index\";\n\nimport {Home, About} from \"./Home/index\";\nimport Test from \"./Test/index\";\n\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <NavigationBar/>\n      <TopHeader/>\n      <Container>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/test\" component={Test} />\n            <Route exact path=\"/about\" component={About} />\n          </Switch>\n        </Router>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}